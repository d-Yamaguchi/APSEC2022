package jp.ntt.sic.automig;

import jp.ntt.sic.automig.migration.TargetAndCandidateParametersLink;
import jp.ntt.sic.automig.rewrite.msmpl.CFGFix;
import jp.ntt.sic.automig.rewrite.msmpl.generate.MetaSmPLGenerator;
import jp.ntt.sic.automig.rewrite.msmpl.lang.MetaSmPL;
import jp.ntt.sic.automig.rewrite.msmpl.normalize.CodeNormalizer;
import jp.ntt.sic.automig.util.Pair;
import jp.ntt.sic.automig.util.ReportUtil;
import jp.ntt.sic.automig.rewrite.msmpl.normalize.CodeDenormalizer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import picocli.CommandLine;
import spoon.Launcher;
import spoon.reflect.code.CtAbstractInvocation;
import spoon.reflect.declaration.CtClass;
import spoon.reflect.declaration.CtElement;
import spoon.reflect.declaration.CtExecutable;
import spoon.reflect.declaration.CtType;
import spoon.reflect.reference.CtExecutableReference;
import spoon.reflect.visitor.filter.AbstractFilter;
import spoon.reflect.visitor.filter.TypeFilter;
import spoon.smpl.CFGModel;
import spoon.smpl.ModelChecker;
import spoon.smpl.SmPLMethodCFG;
import spoon.smpl.SmPLParser;
import spoon.smpl.SmPLRule;
import spoon.smpl.Transformer;
import spoon.support.JavaOutputProcessor;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import java.util.concurrent.Callable;
import java.util.concurrent.atomic.AtomicReference;

@CommandLine.Command(name = "automig", mixinStandardHelpOptions = true, version = "0.0.1")
public class Benchmark implements Callable<Integer> {

    private static final Logger logger = LoggerFactory.getLogger(Benchmark.class);

    @CommandLine.Option(names = {"--benchmark"})
    private String benchmark;

    @CommandLine.Option(names = {"--update-example-path"}, defaultValue = "src/main/resources/AndroEvolve Replications/Update_Example")
    private String updateExamplePath;

    @CommandLine.Option(names = {"--target-dataset-path"}, defaultValue = "src/main/resources/AndroEvolve Replications/Target_Dataset")
    private String targetDatasetPath;

    @CommandLine.Option(names = {"--path-to-jar"}, defaultValue = "src/main/resources/android_jars")
    private String PATH_TO_ANDROIDSDK;

    @CommandLine.Option(names = {"--pn-linker"}, defaultValue = "true")
    private boolean pnLinker;

    @CommandLine.Option(names = {"--cancel-post-calc-scanner"}, defaultValue = "true")
    public static boolean CANCEL_POST_CALC;

    public static List<Pair<String, int[]>> conditional_insertion;


    private Map<String, Pair<String, String>> destDepMap = new HashMap<>();

    private String deprecatedAPIFQN, destinationAPISimpleName;
    private MetaSmPL metaSmPL;

    private String[] jar;

    public static void main(String[] args) {
        int returnCode = new CommandLine(new Benchmark()).execute(args);
        System.exit(returnCode);
    }

    private void init() throws IOException {
        setDestDepMap();
        List<String> jars = new ArrayList<>();
        Files.newDirectoryStream(Path.of(PATH_TO_ANDROIDSDK)).forEach(jarfilePath -> jars.add(jarfilePath.toString()));
        this.jar = new String[jars.size()];
        for (int i = 0; i < jars.size(); i++) {
            this.jar[i] = jars.get(i);
        }
        conditional_insertion = new ArrayList<>();
    }

    private void setDestDepMap() throws IOException {
        switch (benchmark) {
            case "Android-SDK":
                destDepMap.put("abandonAudioFocus", Pair.of("android.media.AudioManager#abandonAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener)", "abandonAudioFocusRequest"));
                destDepMap.put("addAction", Pair.of("android.app.Notification.Builder#addAction(int, java.lang.CharSequence, android.app.PendingIntent)", "addAction"));
                destDepMap.put("addGpsStatusListener", Pair.of("android.location.LocationManager#addGpsStatusListener(android.location.GpsStatus.Listener)", "registerGnssStatusCallback"));
                destDepMap.put("fromHtml", Pair.of("android.text.Html#fromHtml(java.lang.String)", "fromHtml"));
                destDepMap.put("getAllNetworkInfo", Pair.of("android.net.ConnectivityManager#getAllNetworkInfo()", "getAllNetworks"));
                destDepMap.put("getCurrentHour", Pair.of("android.widget.TimePicker#getCurrentHour()", "getHour"));
                destDepMap.put("getCurrentMinute", Pair.of("android.widget.TimePicker#getCurrentMinute()", "getMinute"));
                destDepMap.put("getDeviceId", Pair.of("android.telephony.TelephonyManager#getDeviceId()", "getImei"));
                destDepMap.put("release", Pair.of("android.content.ContentProviderClient#release()", "close"));
                destDepMap.put("removeGpsStatusListener", Pair.of("android.location.LocationManager#removeGpsStatusListener(android.location.GpsStatus.Listener)", "unregisterGnssStatusCallback"));
                destDepMap.put("requestAudioFocus", Pair.of("android.media.AudioManager#requestAudioFocus(android.media.AudioManager.OnAudioFocusChangeListener, int, int)", "requestAudioFocus"));
                destDepMap.put("saveLayer", Pair.of("android.graphics.Canvas#saveLayer(float, float, float, float, android.graphics.Paint, int)", "saveLayer"));
                destDepMap.put("setAudioStreamType", Pair.of("android.media.MediaPlayer#setAudioStreamType(int)", "setAudioAttributes"));
                destDepMap.put("setCurrentHour", Pair.of("android.widget.TimePicker#setCurrentHour(java.lang.Integer)", "setHour"));
                destDepMap.put("setCurrentMinute", Pair.of("android.widget.TimePicker#setCurrentMinute(java.lang.Integer)", "setMinute"));
                destDepMap.put("setTextAppearance", Pair.of("android.widget.TextView#setTextAppearance(android.content.Context, int)", "setTextAppearance"));
                destDepMap.put("startDrag", Pair.of("android.view.View#startDrag(android.content.ClipData, android.view.View.DragShadowBuilder, java.lang.Object, int)", "startDragAndDrop"));
                destDepMap.put("vibrate(long)", Pair.of("android.os.Vibrator#vibrate(long)", "vibrate"));
                destDepMap.put("vibrate(long[], int)", Pair.of("android.os.Vibrator#vibrate(long[], int)", "vibrate"));
                break;
            case "CraftBukkit":
                destDepMap.put("getName", Pair.of("getName()", "getDisplayName"));
                destDepMap.put("BOW", Pair.of("BOW()", "TRIPWIRE_HOOK"));
                destDepMap.put("addUnsafeEnchantment", Pair.of("addUnsafeEnchantment(int)", "giveShooter"));
                destDepMap.put("LEFT_CLICK_AIR", Pair.of("LEFT_CLICK_AIR()", "RIGHT_CLICK_AIR"));
                destDepMap.put("LEFT_CLICK_BLOCK", Pair.of("LEFT_CLICK_BLOCK()", "RIGHT_CLICK_BLOCK"));
                destDepMap.put("getPlayerExact", Pair.of("getPlayerExact(java.lang.String)", "getPlayer"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer(java.lang.String)", "toLowerCase"));
                destDepMap.put("getName", Pair.of("getName()", "getPlayer"));
                destDepMap.put("SKYLANDS", Pair.of("SKYLANDS()", "THE_END"));
                destDepMap.put("options", Pair.of("options()", "isSet"));
                destDepMap.put("setDefaults", Pair.of("setDefaults(org.bukkit.configuration.Configuration)", "getBoolean"));
                destDepMap.put("getNode", Pair.of("getNode(java.lang.String)", "getConfigurationSection"));
                destDepMap.put("Configuration", Pair.of("org.bukkit.util.config.Configuration(java.io.File)", "YamlConfiguration"));
                destDepMap.put("BLACK", Pair.of("BLACK()", "COLOR_CHAR"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getServer"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getServer"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "disable"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "getInt"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,int)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.lang.String)", "set"));
                destDepMap.put("getInt", Pair.of("getInt(java.lang.String,int)", "getString"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_8_R2.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_8_R3.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("getType", Pair.of("getType()", "getBlock"));
                destDepMap.put("GOLD_NUGGET", Pair.of("GOLD_NUGGET()", "COAL"));
                destDepMap.put("getLogger", Pair.of("getLogger()", "getServer"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "info"));
                destDepMap.put("getAll", Pair.of("getAll()", "lls"));
                destDepMap.put("getProperty", Pair.of("getProperty(java.lang.String)", "toString"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "economy"));
                destDepMap.put("teleport", Pair.of("teleport(org.bukkit.Location)", "tpWait"));
                destDepMap.put("teleport", Pair.of("teleport(org.bukkit.Location)", "initTeleport"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "displayLocation"));
                destDepMap.put("spawnCreature", Pair.of("spawnCreature()", "spawnEntity"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.getchunky.chunky.PlayerEvents,org.getchunky.chunky.Chunky)", "registerEvents"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String)", "set"));
                destDepMap.put("equals", Pair.of("equals()", "contains"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "close"));
                destDepMap.put("getFace", Pair.of("getFace(org.bukkit.block.BlockFace)", "getRelative"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.sk89q.craftbook.bukkit.PlayerListener,org.bukkit.plugin.java.JavaPlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.sk89q.craftbook.bukkit.BlockListener,org.bukkit.plugin.java.JavaPlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.bukkit.event.world.WorldListener,org.bukkit.plugin.java.JavaPlugin)", "registerEvents"));
                destDepMap.put("getIntList", Pair.of("getIntList(java.lang.String,java.util.List<java.lang.Integer>)", "getIntegerList"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("getFace", Pair.of("getFace(int)", "getRelative"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "GREEN"));
                destDepMap.put("getName", Pair.of("getName()", "getString"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.narrowtux.MagnetBlock.MagnetBlockListener,com.narrowtux.MagnetBlock.MagnetBlock)", "registerEvents"));
                destDepMap.put("setCreatureType", Pair.of("setCreatureType(org.bukkit.entity.CreatureType)", "setSpawnedType"));
                destDepMap.put("getCreatureType", Pair.of("getCreatureType()", "getSpawnedType"));
                destDepMap.put("getName", Pair.of("getName()", "getVersion"));
                destDepMap.put("YELLOW", Pair.of("YELLOW()", "GREEN"));
                destDepMap.put("getLastPlayed", Pair.of("getLastPlayed()", "round"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.authdb.listeners.AuthDBPlayerListener,com.authdb.AuthDB)", "registerEvents"));
                destDepMap.put("isOp", Pair.of("isOp()", "hasPermission"));
                destDepMap.put("FIRE_RESISTANCE", Pair.of("FIRE_RESISTANCE()", "TIPPED_ARROW"));
                destDepMap.put("getByDamageValue", Pair.of("getByDamageValue(int)", "getContents"));
                destDepMap.put("isInstant", Pair.of("isInstant()", "startsWith"));
                destDepMap.put("NORTH", Pair.of("NORTH()", "SOUTH"));
                destDepMap.put("EAST", Pair.of("EAST()", "WEST"));
                destDepMap.put("getPluginManager", Pair.of("getPluginManager()", "getOwners"));
                destDepMap.put("CLOSED_CHAT_PAGE_HEIGHT", Pair.of("CLOSED_CHAT_PAGE_HEIGHT()", "OPEN_CHAT_PAGE_HEIGHT"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getEquipment"));
                destDepMap.put("getServer", Pair.of("getServer()", "getOnlinePlayers"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("AQUA", Pair.of("AQUA()", "LIGHT_CYAN"));
                destDepMap.put("PotionEffect", Pair.of("org.bukkit.potion.PotionEffect(org.bukkit.potion.PotionEffectType,int,int)", "Object"));
                destDepMap.put("Vector", Pair.of("org.bukkit.util.Vector(double,double,double)", "Direction"));
                destDepMap.put("Listener", Pair.of("org.bukkit.event.Listener()", "1"));
                destDepMap.put("getName", Pair.of("getName()", "get"));
                destDepMap.put("toString", Pair.of("toString()", "getWorld"));
                destDepMap.put("LOW", Pair.of("LOW()", "HIGHEST"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int)", "Object"));
                destDepMap.put("setLevel", Pair.of("setLevel()", "max"));
                destDepMap.put("setTime", Pair.of("setTime()", "setItemStack"));
                destDepMap.put("setHealth", Pair.of("setHealth()", "heal"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "getItemInMainHand"));
                destDepMap.put("setItemInHand", Pair.of("setItemInHand(null)", "setItemInMainHand"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "mlSend"));
                destDepMap.put("getGameMode", Pair.of("getGameMode()", "getDamage"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getServer"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.hsun324.protection.events.BlockEventListener,com.hsun324.protection.Protection)", "registerEvents"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "remove"));
                destDepMap.put("hashCode", Pair.of("hashCode()", "getUniqueId"));
                destDepMap.put("setHealth", Pair.of("setHealth(int)", "put"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "populateChest"));
                destDepMap.put("setTexturePack", Pair.of("setTexturePack(java.lang.String)", "setResourcePack"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getInstance"));
                destDepMap.put("getName", Pair.of("getName()", "getRecipients"));
                destDepMap.put("GREEN", Pair.of("GREEN()", "RED"));
                destDepMap.put("AIR", Pair.of("AIR()", "BIND_KEY"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getConfigManager"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getHotkeyInventroy"));
                destDepMap.put("BEACH", Pair.of("BEACH()", "BEACHES"));
                destDepMap.put("RED", Pair.of("RED()", "DARK_RED"));
                destDepMap.put("throwEgg", Pair.of("throwEgg()", "launchProjectile"));
                destDepMap.put("throwSnowball", Pair.of("throwSnowball()", "launchProjectile"));
                destDepMap.put("shootArrow", Pair.of("shootArrow()", "launchProjectile"));
                destDepMap.put("getFullName", Pair.of("getFullName()", "getName"));
                destDepMap.put("MONITOR", Pair.of("MONITOR()", "LOW"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getPlayer"));
                destDepMap.put("getView", Pair.of("getView()", "get"));
                destDepMap.put("getUniqueId", Pair.of("getUniqueId()", "get"));
                destDepMap.put("closeInventory", Pair.of("closeInventory()", "closeAndResync"));
                destDepMap.put("addItem", Pair.of("addItem(org.bukkit.inventory.ItemStack)", "put"));
                destDepMap.put("setMaxHealth", Pair.of("setMaxHealth(double)", "setHealth"));
                destDepMap.put("getAction", Pair.of("getAction()", "getPlayerAction"));
                destDepMap.put("RIGHT_CLICK_AIR", Pair.of("RIGHT_CLICK_AIR()", "NONE"));
                destDepMap.put("RIGHT_CLICK_BLOCK", Pair.of("RIGHT_CLICK_BLOCK()", "CHANGE_SPELL"));
                destDepMap.put("LEFT_CLICK_AIR", Pair.of("LEFT_CLICK_AIR()", "CAST_SPELL"));
                destDepMap.put("getEntity", Pair.of("getEntity()", "getPlayerAction"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendTranslatedMessage"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int)", "Object"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendTranslatedMessage"));
                destDepMap.put("LIGHT_PURPLE", Pair.of("LIGHT_PURPLE()", "AQUA"));
                destDepMap.put("LOWEST", Pair.of("LOWEST()", "LOW"));
                destDepMap.put("showPlayer", Pair.of("showPlayer(de.tobiyas.racesandclasses.playermanagement.player.RaCPlayer)", "getPlayer"));
                destDepMap.put("hasGravity", Pair.of("hasGravity()", "getDisplayName"));
                destDepMap.put("isSilent", Pair.of("isSilent()", "getCurrentMana"));
                destDepMap.put("getPotionEffect", Pair.of("getPotionEffect(org.bukkit.potion.PotionEffectType)", "getMaxMana"));
                destDepMap.put("getPortalCooldown", Pair.of("getPortalCooldown()", "getCurrentLevel"));
                destDepMap.put("getExperience", Pair.of("getExperience()", "getExp"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBPlayerListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBBlockListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBEntityListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBCustomListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.GUIEvent,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("setPlayerListName", Pair.of("setPlayerListName(java.lang.String)", "doPlayerListStuff"));
                destDepMap.put("setPlayerListName", Pair.of("setPlayerListName()", "doPlayerListStuff"));
                destDepMap.put("getInt", Pair.of("getInt(java.lang.String,int)", "getString"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getBalance"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "helpMessage"));
                destDepMap.put("RED", Pair.of("RED()", "DARK_RED"));
                destDepMap.put("GREEN", Pair.of("GREEN()", "RESET"));
                destDepMap.put("getDisplayName", Pair.of("getDisplayName()", "getLore"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getMaterial", Pair.of("getMaterial(java.lang.String)", "toUpperCase"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_5_R3.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_6_R3.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_5_R2.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_6_R1.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getEntity"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getEquipment"));
                destDepMap.put("getDouble", Pair.of("getDouble(java.lang.String,double)", "getBoolean"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.v1_6_R2.util.UnsafeList()", "UnsafeList"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getDamager", Pair.of("getDamager()", "getEntity"));
                destDepMap.put("getCode", Pair.of("getCode()", "getChar"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getBlock", Pair.of("getBlock()", "getDrops"));
                destDepMap.put("getBlock", Pair.of("getBlock()", "getTileEntity"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getName"));
                destDepMap.put("RED", Pair.of("RED()", "AQUA"));
                destDepMap.put("getList", Pair.of("getList(null)", "getStringList"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "getStringList"));
                destDepMap.put("broadcastMessage", Pair.of("broadcastMessage()", "setHealth"));
                destDepMap.put("getType", Pair.of("getType()", "getAttachedFace"));
                destDepMap.put("CHEST", Pair.of("CHEST()", "UP"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getUniqueId", Pair.of("getUniqueId()", "getUUID"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getName"));
                destDepMap.put("getScheduler", Pair.of("getScheduler()", "getServer"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "getType"));
                destDepMap.put("getAmount", Pair.of("getAmount()", "getType"));
                destDepMap.put("closeInventory", Pair.of("closeInventory()", "remove"));
                destDepMap.put("getType", Pair.of("getType()", "getY"));
                destDepMap.put("getX", Pair.of("getX()", "getShopkeeperByBlock"));
                destDepMap.put("isRightClick", Pair.of("isRightClick()", "isSneaking"));
                destDepMap.put("getCursor", Pair.of("getCursor()", "getUIManager"));
                destDepMap.put("MIDDLE", Pair.of("MIDDLE()", "MONSTER_EGG"));
                destDepMap.put("setItem", Pair.of("setItem(int)", "sendMessage"));
                destDepMap.put("set", Pair.of("set(java.lang.String,java.lang.String)", "save"));
                destDepMap.put("fromItemStack", Pair.of("fromItemStack(org.bukkit.inventory.ItemStack)", "getItemMeta"));
                destDepMap.put("getEffects", Pair.of("getEffects()", "getCustomEffects"));
                destDepMap.put("notifyClients", Pair.of("notifyClients()", "applyUpdates"));
                destDepMap.put("setMaxRelightTimePerTick", Pair.of("setMaxRelightTimePerTick(int,java.util.concurrent.TimeUnit)", "setStaticLightLevel"));
                destDepMap.put("setDeferredBufferSize", Pair.of("setDeferredBufferSize(int)", "setUpdateBufferSize"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int,byte)", "addBlockUpdate"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getPlayerExact", Pair.of("getPlayerExact(java.lang.String)", "getPlayer"));
                destDepMap.put("getInt", Pair.of("getInt(java.lang.String)", "getInstance"));
                destDepMap.put("getConfigurationSection", Pair.of("getConfigurationSection(java.lang.String)", "getLevelSystems"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.monksanctum.MineQuest.Listener.MineQuestPlayerListener,org.monksanctum.MineQuest.MineQuest)", "registerEvents"));
                destDepMap.put("setData", Pair.of("setData()", "sendMessage"));
                destDepMap.put("setLine", Pair.of("setLine(int,java.lang.String)", "sendMessage"));
                destDepMap.put("update", Pair.of("update(boolean)", "addToList"));
                destDepMap.put("getRelative", Pair.of("getRelative()", "getMaterial"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.bukkit.event.player.PlayerListener,me.wizzledonker.plugins.oblicomcore.OblicomCore)", "registerEvents"));
                destDepMap.put("registerEvents", Pair.of("registerEvents(org.bukkit.event.Listener,me.wizzledonker.plugins.oblicomcore.OblicomCore)", "_registerEvents"));
                destDepMap.put("isSet", Pair.of("isSet(java.lang.String)", "toString"));
                destDepMap.put("getType", Pair.of("getType()", "getState"));
                destDepMap.put("RIGHT_CLICK_BLOCK", Pair.of("RIGHT_CLICK_BLOCK()", "CREATIVE"));
                destDepMap.put("setType", Pair.of("setType(org.bukkit.Material)", "setTypeIdAndData"));
                destDepMap.put("CraftItemStack", Pair.of("org.bukkit.craftbukkit.inventory.CraftItemStack(int,int,short,byte)", "CraftItemStack"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "getItemFromSection"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("getValue", Pair.of("getValue()", "equalsIgnoreCase"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender,java.lang.String)", "sendMessage"));
                destDepMap.put("q", Pair.of("q()", "getDataManager"));
                destDepMap.put("p", Pair.of("p()", "getEnchantments"));
                destDepMap.put("b", Pair.of("b(short)", "setData"));
                destDepMap.put("a", Pair.of("a()", "canEnchant"));
                destDepMap.put("aj", Pair.of("aj()", "isAlive"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "flagDirty"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setTypeAndData"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("setTypeId", Pair.of("setTypeId()", "setType"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int)", "Object"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlock"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "Object"));
                destDepMap.put("aX", Pair.of("aX()", "bc"));
                destDepMap.put("setCompound", Pair.of("setCompound(java.lang.String,org.bukkit.craftbukkit.entity.NBTTagCompound)", "set"));
                destDepMap.put("getTypeId", Pair.of("getTypeId(int,int,int)", "getType"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int,int)", "setTypeAndData"));
                destDepMap.put("getId", Pair.of("getId()", "getItem"));
                destDepMap.put("CraftItemStack", Pair.of("org.bukkit.craftbukkit.inventory.CraftItemStack(int,int,short,org.bukkit.inventory.meta.ItemMeta)", "CraftItemStack"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "a"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int,int)", "a"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getBlock"));
                destDepMap.put("a", Pair.of("a(byte[],int,int,int,int,int,int,int)", "getData"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityWeatherStorm)", "strikeLightning"));
                destDepMap.put("c", Pair.of("c(int)", "setWeatherDuration"));
                destDepMap.put("b", Pair.of("b(int)", "setThunderDuration"));
                destDepMap.put("b", Pair.of("b()", "getSeed"));
                destDepMap.put("l", Pair.of("l()", "hasStorm"));
                destDepMap.put("m", Pair.of("m()", "getWeatherDuration"));
                destDepMap.put("j", Pair.of("j()", "isThundering"));
                destDepMap.put("k", Pair.of("k()", "getThunderDuration"));
                destDepMap.put("b", Pair.of("b(boolean)", "setStorm"));
                destDepMap.put("a", Pair.of("a(boolean)", "setThundering"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setRawTypeId"));
                destDepMap.put("a", Pair.of("a()", "getItem"));
                destDepMap.put("setHandle", Pair.of("setHandle(net.minecraft.server.EntityPlayer)", "d"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setRawTypeId"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int)", "setRawTypeIdAndData"));
                destDepMap.put("d", Pair.of("d(int,int)", "queueUnload"));
                destDepMap.put("g", Pair.of("g(int,int,int)", "notify"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityItem)", "addEntity"));
                destDepMap.put("c", Pair.of("c(int,int)", "setPositionRotation"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityArrow)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityMinecart)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityBoat)", "addEntity"));
                destDepMap.put("a", Pair.of("a(long)", "setTime"));
                destDepMap.put("t", Pair.of("t()", "saveLevel"));
                destDepMap.put("a", Pair.of("a(boolean,null)", "saveChunks"));
                destDepMap.put("d", Pair.of("d(int,int)", "getHighestBlockYAt"));
                destDepMap.put("m", Pair.of("m()", "getSpawn"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "setSpawn"));
                destDepMap.put("a", Pair.of("a(int,int)", "isChunkLoaded"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("a", Pair.of("a()", "unloadQueue"));
                destDepMap.put("e", Pair.of("e()", "chunks"));
                destDepMap.put("f", Pair.of("f()", "chunkList"));
                destDepMap.put("a", Pair.of("a()", "setPosition"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityLiving)", "addEntity"));
                destDepMap.put("l", Pair.of("l()", "getTime"));
                destDepMap.put("b", Pair.of("b()", "entityList"));
                destDepMap.put("o", Pair.of("o()", "chunkProvider"));
                destDepMap.put("q", Pair.of("q()", "worldData"));
                destDepMap.put("c", Pair.of("c(int,int)", "getChunkAt"));
                destDepMap.put("e", Pair.of("e()", "removeEntities"));
                destDepMap.put("b", Pair.of("b(org.bukkit.Chunk)", "saveChunk"));
                destDepMap.put("a", Pair.of("a(org.bukkit.Chunk)", "saveChunkNOP"));
                destDepMap.put("c", Pair.of("c()", "chunkProvider"));
                destDepMap.put("c", Pair.of("c()", "loadNOP"));
                destDepMap.put("d", Pair.of("d()", "addEntities"));
                destDepMap.put("b", Pair.of("b()", "emptyChunk"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("e", Pair.of("e(int,int)", "loadChunk"));
                destDepMap.put("g", Pair.of("g()", "world"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.ChunkProviderServer,int,int)", "getChunkAt"));
                destDepMap.put("k", Pair.of("k()", "random"));
                destDepMap.put("b", Pair.of("b()", "setLocation"));
                destDepMap.put("aZ", Pair.of("aZ()", "velocityChanged"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.WorldServer)", "setPlayerFileData"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.ServerCommand)", "handle"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.Entity,int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a(int)", "damageEntity"));
                destDepMap.put("w", Pair.of("w()", "q"));
                destDepMap.put("u", Pair.of("u()", "q"));
                destDepMap.put("l", Pair.of("l()", "k"));
                destDepMap.put("add", Pair.of("add(net.minecraft.server.AxisAlignedBB)", "iterator"));
                destDepMap.put("clear", Pair.of("clear()", "iterator"));
                destDepMap.put("size", Pair.of("size()", "values"));
                destDepMap.put("FIREBALL", Pair.of("FIREBALL()", "UNKNOWN"));
                destDepMap.put("a", Pair.of("a()", "c"));
                destDepMap.put("setTime", Pair.of("setTime(long)", "setDayTime"));
                destDepMap.put("F", Pair.of("F()", "getDayTime"));
                destDepMap.put("m", Pair.of("m()", "triggerHealthUpdate"));
                destDepMap.put("o", Pair.of("o()", "remove"));
                destDepMap.put("d", Pair.of("d()", "isEmpty"));
                destDepMap.put("a", Pair.of("a(float,float)", "shoot"));
                destDepMap.put("b", Pair.of("b(org.bukkit.craftbukkit.entity.Entity)", "getEntities"));
                destDepMap.put("b", Pair.of("b(double,double,double)", "grow"));
                destDepMap.put("SHRUBLAND", Pair.of("SHRUBLAND()", "RIVER"));
                destDepMap.put("ICE_DESERT", Pair.of("ICE_DESERT()", "EXTREME_HILLS"));
                destDepMap.put("TUNDRA", Pair.of("TUNDRA()", "OCEAN"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "setTypeIdAndData"));
                destDepMap.put("clear", Pair.of("clear()", "get"));
                destDepMap.put("getUUID", Pair.of("getUUID()", "getDataManager"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("setSneak", Pair.of("setSneak(boolean)", "setSneaking"));
                destDepMap.put("QueuedPacket", Pair.of("org.bukkit.craftbukkit.ChunkCompressionThread$QueuedPacket(net.minecraft.server.EntityPlayer,net.minecraft.server.Packet,boolean)", "QueuedPacket"));
                destDepMap.put("h", Pair.of("h()", "i"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.util.UnsafeList()", "ArrayList"));
                destDepMap.put("unsafeGet", Pair.of("unsafeGet(int)", "next"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "d"));
                destDepMap.put("getServer", Pair.of("getServer()", "getTag"));
                destDepMap.put("getWorlds", Pair.of("getWorlds()", "getServerConfigurationManager"));
                destDepMap.put("PortalTravelAgent", Pair.of("org.bukkit.craftbukkit.PortalTravelAgent()", "Object"));
                destDepMap.put("setSpawnRadius", Pair.of("setSpawnRadius()", "convert"));
                destDepMap.put("stripColor", Pair.of("stripColor()", "b"));
                destDepMap.put("d", Pair.of("d()", "a"));
                destDepMap.put("e", Pair.of("e()", "b"));
                destDepMap.put("canSave", Pair.of("canSave()", "savingDisabled"));
                destDepMap.put("b", Pair.of("b(java.lang.String,boolean)", "setBoolean"));
                destDepMap.put("c", Pair.of("c(net.minecraft.server.EntityPlayer)", "clear"));
                destDepMap.put("b", Pair.of("b(net.minecraft.server.EntityPlayer)", "updatePlayer"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "getTypeId"));
                destDepMap.put("b", Pair.of("b(int,int,int)", "getData"));
                destDepMap.put("m", Pair.of("m(int,int,int)", "getTileEntity"));
                destDepMap.put("m", Pair.of("m()", "spawnX"));
                destDepMap.put("o", Pair.of("o()", "spawnZ"));
                destDepMap.put("c", Pair.of("c()", "id"));
                destDepMap.put("a", Pair.of("a()", "count"));
                destDepMap.put("d", Pair.of("d()", "damage"));
                destDepMap.put("getPlayerManager", Pair.of("getPlayerManager()", "getPlayerChunkMap"));
                destDepMap.put("server", Pair.of("server()", "playerList"));
                destDepMap.put("aW", Pair.of("aW()", "aX"));
                destDepMap.put("toBukkitRotation", Pair.of("toBukkitRotation(int)", "asBukkitCopy"));
                destDepMap.put("asBukkitCopy", Pair.of("asBukkitCopy()", "toBukkitRotation"));
                destDepMap.put("r", Pair.of("r()", "t"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d(int,int)", "c"));
                destDepMap.put("getMembers", Pair.of("getMembers()", "getMemberNames"));
                destDepMap.put("AIR", Pair.of("AIR()", "FISHING_HOOK"));
                destDepMap.put("getPlayers", Pair.of("getPlayers()", "getPlayersInternal"));
                destDepMap.put("CreatureType", Pair.of("org.bukkit.entity.CreatureType(java.lang.String)", "CreatureType"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "ItemStack"));
                destDepMap.put("AVERAGE_CHAT_PAGE_WIDTH", Pair.of("AVERAGE_CHAT_PAGE_WIDTH()", "GUARANTEED_NO_WRAP_CHAT_PAGE_WIDTH"));
                destDepMap.put("lookupName", Pair.of("lookupName()", "BY_NAME"));
                destDepMap.put("lookupId", Pair.of("lookupId()", "byId"));
                destDepMap.put("CoalType", Pair.of("org.bukkit.CoalType(byte)", "CoalType"));
                destDepMap.put("types", Pair.of("types()", "BY_DATA"));
                destDepMap.put("DyeColor", Pair.of("org.bukkit.DyeColor(byte)", "DyeColor"));
                destDepMap.put("colors", Pair.of("colors()", "BY_DATA"));
                destDepMap.put("ids", Pair.of("ids()", "BY_ID"));
                destDepMap.put("names", Pair.of("names()", "BY_NAME"));
                destDepMap.put("difficulties", Pair.of("difficulties()", "BY_ID"));
                destDepMap.put("EntityEffect", Pair.of("org.bukkit.EntityEffect(byte)", "EntityEffect"));
                destDepMap.put("Tone", Pair.of("org.bukkit.Note$Tone(byte,boolean)", "Tone"));
                destDepMap.put("getToneById", Pair.of("getToneById(byte)", "getById"));
                destDepMap.put("tones", Pair.of("tones()", "BY_DATA"));
                destDepMap.put("lookup", Pair.of("lookup()", "BY_NAME"));
                destDepMap.put("CreatureType", Pair.of("org.bukkit.entity.CreatureType(java.lang.String,java.lang.Class<? extends org.bukkit.entity.Entity>)", "CreatureType"));
                destDepMap.put("mapping", Pair.of("mapping()", "NAME_MAP"));
                destDepMap.put("CropState", Pair.of("org.bukkit.CropState(byte)", "CropState"));
                destDepMap.put("states", Pair.of("states()", "BY_DATA"));
                destDepMap.put("modes", Pair.of("modes()", "BY_ID"));
                destDepMap.put("statistics", Pair.of("statistics()", "BY_ID"));
                destDepMap.put("colors", Pair.of("colors()", "BY_ID"));
                destDepMap.put("lookup", Pair.of("lookup()", "BY_CHAR"));
                destDepMap.put("GrassSpecies", Pair.of("org.bukkit.GrassSpecies(byte)", "GrassSpecies"));
                destDepMap.put("species", Pair.of("species()", "BY_DATA"));
                destDepMap.put("TreeSpecies", Pair.of("org.bukkit.TreeSpecies(byte)", "TreeSpecies"));
                destDepMap.put("species", Pair.of("species()", "BY_DATA"));
                destDepMap.put("achievements", Pair.of("achievements()", "BY_ID"));
                destDepMap.put("getCode", Pair.of("getCode()", "nullValue"));
                destDepMap.put("Instrument", Pair.of("org.bukkit.Instrument(byte)", "Instrument"));
                destDepMap.put("types", Pair.of("types()", "BY_DATA"));
                destDepMap.put("InvalidDescriptionException", Pair.of("org.bukkit.plugin.InvalidDescriptionException(java.lang.ClassCastException,java.lang.String)", "InvalidDescriptionException"));
                destDepMap.put("baked", Pair.of("baked()", "handlers"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "append"));
                destDepMap.put("getModZ", Pair.of("getModZ()", "getRelative"));
                destDepMap.put("Effect", Pair.of("org.bukkit.Effect(int)", "Effect"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int,int)", "Material"));
                destDepMap.put("WORLD", Pair.of("WORLD()", "BIOME"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("AVERAGE_CHAT_PAGE_WIDTH", Pair.of("AVERAGE_CHAT_PAGE_WIDTH()", "GUARANTEED_NO_WRAP_CHAT_PAGE_WIDTH"));
                destDepMap.put("getNewData", Pair.of("getNewData(byte)", "getItemType"));
                destDepMap.put("location", Pair.of("location()", "spawnReason"));
                destDepMap.put("type", Pair.of("type()", "name"));
                destDepMap.put("addIngredient", Pair.of("addIngredient(int,org.bukkit.material.MaterialData)", "removeIngredient"));
                destDepMap.put("alllists", Pair.of("alllists()", "allLists"));
                destDepMap.put("ingredients", Pair.of("ingredients()", "rows"));
                destDepMap.put("fromName", Pair.of("fromName()", "fromEntityType"));
                destDepMap.put("type", Pair.of("type()", "enchantments"));
                destDepMap.put("addEnchantment", Pair.of("addEnchantment(org.bukkit.enchantments.Enchantment,int)", "addUnsafeEnchantment"));
                destDepMap.put("createWorld", Pair.of("createWorld(java.lang.String,org.bukkit.World.Environment)", "getRecipesFor"));
                destDepMap.put("createWorld", Pair.of("createWorld(java.lang.String,org.bukkit.World.Environment,long)", "getDefaultGameMode"));
                destDepMap.put("createWorld", Pair.of("createWorld(java.lang.String,org.bukkit.World.Environment,long,org.bukkit.generator.ChunkGenerator)", "getOfflinePlayers"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(me.greatman.Craftconomy.listeners.CCPlayerListener,me.greatman.Craftconomy.Craftconomy)", "registerEvents"));
                destDepMap.put("FlatSet", Pair.of("org.bukkit.craftbukkit.util.FlatSet()", "FlatSet"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.util.HashMap<java.lang.String, java.lang.String>)", "set"));
                destDepMap.put("CraftPotionBrewer", Pair.of("org.bukkit.craftbukkit.v1_6_R3.potion.CraftPotionBrewer()", "CraftPotionBrewer"));
                destDepMap.put("getDouble", Pair.of("getDouble(java.lang.String,double)", "getInt"));
                destDepMap.put("a", Pair.of("a(int,int,int,int)", "b"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getPlayerExact", Pair.of("getPlayerExact(java.lang.String)", "getPlayer"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String)", "pieceToChar"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getLightLevel"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(me.desht.chesscraft.ChessPlayerListener,me.desht.chesscraft.ChessCraft)", "registerEvents"));
                destDepMap.put("FALSE", Pair.of("FALSE()", "OP"));
                destDepMap.put("getItem", Pair.of("getItem()", "getFrameItem"));
                destDepMap.put("getValues", Pair.of("getValues(boolean)", "createSection"));
                destDepMap.put("setCreatureType", Pair.of("setCreatureType(org.bukkit.entity.CreatureType)", "setCreatureTypeByName"));
                destDepMap.put("setHatchType", Pair.of("setHatchType()", "setHatchingType"));
                destDepMap.put("getIntList", Pair.of("getIntList(java.lang.String,null)", "get"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getData", Pair.of("getData()", "getDurability"));
                destDepMap.put("CraftLivingEntity", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftLivingEntity(null,null)", "CraftLivingEntity"));
                destDepMap.put("RED", Pair.of("RED()", "DARK_RED"));
                destDepMap.put("getHealth", Pair.of("getHealth()", "getMaxHealth"));
                destDepMap.put("setAmount", Pair.of("setAmount(int)", "setType"));
                destDepMap.put("clone", Pair.of("clone()", "getType"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.InvinciWolf.IWEntityListener,in.mDev.MiracleM4n.InvinciWolf.InvinciWolf)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.InvinciWolf.IWPlayerListener,in.mDev.MiracleM4n.InvinciWolf.InvinciWolf)", "registerEvents"));
                destDepMap.put("YELLOW", Pair.of("YELLOW()", "RED"));
                destDepMap.put("getLastPlayed", Pair.of("getLastPlayed()", "getOfflinePlayer"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("getServer", Pair.of("getServer()", "getName"));
                destDepMap.put("RED", Pair.of("RED()", "YELLOW"));
                destDepMap.put("GREEN", Pair.of("GREEN()", "BLUE"));
                destDepMap.put("YELLOW", Pair.of("YELLOW()", "AQUA"));
                destDepMap.put("getName", Pair.of("getName()", "valueOf"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("getValue", Pair.of("getValue()", "equalsIgnoreCase"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender,java.lang.String)", "sendMessage"));
                destDepMap.put("LOCKED_CHEST", Pair.of("LOCKED_CHEST()", "LOG_2"));
                destDepMap.put("CARPET", Pair.of("CARPET()", "ACACIA_STAIRS"));
                destDepMap.put("COAL_BLOCK", Pair.of("COAL_BLOCK()", "PACKED_ICE"));
                destDepMap.put("Statistic", Pair.of("org.bukkit.Statistic(int,boolean)", "Statistic"));
                destDepMap.put("setLevel", Pair.of("setLevel(int)", "giveExp"));
                destDepMap.put("getTotalExperience", Pair.of("getTotalExperience()", "calcExperience"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,int)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,boolean)", "set"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "asNMSCopy"));
                destDepMap.put("LOWEST", Pair.of("LOWEST()", "HIGHEST"));
                destDepMap.put("getServer", Pair.of("getServer()", "getInstance"));
                destDepMap.put("setGameMode", Pair.of("setGameMode()", "getName"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "_"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "_"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "_"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "Object"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "getInstance"));
                destDepMap.put("runTask", Pair.of("runTask(fr.xephi.authme.AuthMe,fr.xephi.authme.task.MessageTask)", "scheduleSyncDelayedTask"));
                destDepMap.put("runTaskLater", Pair.of("runTaskLater(fr.xephi.authme.AuthMe,fr.xephi.authme.task.TimeoutTask,int)", "scheduleSyncDelayedTask"));
                destDepMap.put("getScheduler", Pair.of("getScheduler()", "getInstance"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "_"));
                destDepMap.put("runTask", Pair.of("runTask(uk.org.whoami.authme.AuthMe,uk.org.whoami.authme.listener.AuthMePlayerListener.7)", "scheduleSyncDelayedTask"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "authmePermissible"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "authmePermissible"));
                destDepMap.put("MONITOR", Pair.of("MONITOR()", "LOWEST"));
                destDepMap.put("getEntity", Pair.of("getEntity()", "getTarget"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer(java.lang.String)", "getPlayer"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "prepareStatement"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(PPPlayerListener.PortalPlayerListener,com.precipicegames.portalplugin.PortalPlugin)", "registerEvents"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getName"));
                destDepMap.put("options", Pair.of("options()", "getStringList"));
                destDepMap.put("AQUA", Pair.of("AQUA()", "GREEN"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("throwEgg", Pair.of("throwEgg()", "launchProjectile"));
                destDepMap.put("throwSnowball", Pair.of("throwSnowball()", "launchProjectile"));
                destDepMap.put("getExperience", Pair.of("getExperience()", "getExhaustion"));
                destDepMap.put("getConfiguration", Pair.of("getConfiguration()", "getConfig"));
                destDepMap.put("GREEN", Pair.of("GREEN()", "YELLOW"));
                destDepMap.put("matchMaterial", Pair.of("matchMaterial()", "getOtherMat"));
                destDepMap.put("setType", Pair.of("setType()", "setTypeIdAndData"));
                destDepMap.put("loadConfiguration", Pair.of("loadConfiguration(java.io.File)", "getCreatedSection"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.v1_6_R1.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.v1_5_R1.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.v1_4_5.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.v1_5_R2.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.v1_4_R1.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("CraftInventoryCustom", Pair.of("org.bukkit.craftbukkit.v1_4_6.inventory.CraftInventoryCustom(org.bukkit.inventory.InventoryHolder,int)", "CraftInventoryCustom"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "getLocation"));
                destDepMap.put("HIGHEST", Pair.of("HIGHEST()", "HIGH"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String)", "getBoolean"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("NORMAL", Pair.of("NORMAL()", "MONITOR"));
                destDepMap.put("loadConfiguration", Pair.of("loadConfiguration(java.io.File)", "toConfig"));
                destDepMap.put("SKYLANDS", Pair.of("SKYLANDS()", "THE_END"));
                destDepMap.put("options", Pair.of("options()", "isSet"));
                destDepMap.put("setDefaults", Pair.of("setDefaults(org.bukkit.configuration.Configuration)", "getBoolean"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "printHelpHeader"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.cogito.bukkit.dev.DevEntityListener,com.cogito.bukkit.dev.DevBukkit)", "put"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.cogito.bukkit.dev.DevPlayerListener,com.cogito.bukkit.dev.DevBukkit)", "registerEvents"));
                destDepMap.put("shape", Pair.of("shape(java.lang.String,java.lang.String)", "setDebugMode"));
                destDepMap.put("setIngredient", Pair.of("setIngredient(char)", "addIngredient"));
                destDepMap.put("ShapedRecipe", Pair.of("org.bukkit.inventory.ShapedRecipe(org.bukkit.inventory.ItemStack)", "ShapelessRecipe"));
                destDepMap.put("setYield", Pair.of("setYield(int)", "cancelEvent"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "infoMessage"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.monksanctum.MineQuest.Listener.MineQuestPlayerListener,org.monksanctum.MineQuest.MineQuest)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.minecarts.familyjewels.listener.PlayerListener,com.minecarts.familyjewels.FamilyJewels)", "registerEvents"));
                destDepMap.put("getName", Pair.of("getName()", "name"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int)", "Object"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.sk89q.craftbook.bukkit.PlayerListener,org.bukkit.plugin.java.JavaPlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.sk89q.craftbook.bukkit.BlockListener,org.bukkit.plugin.java.JavaPlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.bukkit.event.world.WorldListener,org.bukkit.plugin.java.JavaPlugin)", "registerEvents"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("getFace", Pair.of("getFace(org.bukkit.block.BlockFace)", "getRelative"));
                destDepMap.put("getIntList", Pair.of("getIntList(java.lang.String,java.util.List<java.lang.Integer>)", "getIntegerList"));
                destDepMap.put("getFace", Pair.of("getFace(int)", "getRelative"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int)", "ItemStack"));
                destDepMap.put("getX", Pair.of("getX()", "getWorld"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer(java.lang.String)", "getPlayer"));
                destDepMap.put("getUniqueId", Pair.of("getUniqueId()", "getName"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(boolean)", "put"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getItemFactory"));
                destDepMap.put("registerEvents", Pair.of("registerEvents(com.craftyn.casinoslots.listeners.ChunkListener,com.craftyn.casinoslots.CasinoSlots)", "disablePlugin"));
                destDepMap.put("getItemTypeId", Pair.of("getItemTypeId()", "equals"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int)", "setType"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "startTutorial"));
                destDepMap.put("getClickedBlock", Pair.of("getClickedBlock()", "getGateTeleportSign"));
                destDepMap.put("getType", Pair.of("getType()", "getGateTeleportSign"));
                destDepMap.put("getAction", Pair.of("getAction()", "getGateTeleportSign"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getGateNetwork"));
                destDepMap.put("toString", Pair.of("toString()", "getName"));
                destDepMap.put("LIGHT_PURPLE", Pair.of("LIGHT_PURPLE()", "WHITE"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "GREEN"));
                destDepMap.put("RED", Pair.of("RED()", "YELLOW"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.precipicegames.zeryl.hidenseek.HideNSeekEntityListener,com.precipicegames.zeryl.hidenseek.HideNSeek)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.precipicegames.zeryl.hidenseek.HideNSeekPlayerListener,com.precipicegames.zeryl.hidenseek.HideNSeek)", "registerEvents"));
                destDepMap.put("getUniqueId", Pair.of("getUniqueId()", "getUUID"));
                destDepMap.put("isRightClick", Pair.of("isRightClick()", "isSneaking"));
                destDepMap.put("getCursor", Pair.of("getCursor()", "getUIManager"));
                destDepMap.put("MIDDLE", Pair.of("MIDDLE()", "MONSTER_EGG"));
                destDepMap.put("setItem", Pair.of("setItem(int)", "sendMessage"));
                destDepMap.put("getX", Pair.of("getX()", "getShopkeeperByBlock"));
                destDepMap.put("set", Pair.of("set(java.lang.String,java.lang.String)", "save"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getName"));
                destDepMap.put("getScheduler", Pair.of("getScheduler()", "getServer"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "getType"));
                destDepMap.put("getAmount", Pair.of("getAmount()", "getType"));
                destDepMap.put("closeInventory", Pair.of("closeInventory()", "remove"));
                destDepMap.put("getType", Pair.of("getType()", "getY"));
                destDepMap.put("p", Pair.of("p()", "getEnchantments"));
                destDepMap.put("b", Pair.of("b(short)", "setData"));
                destDepMap.put("aj", Pair.of("aj()", "isAlive"));
                destDepMap.put("q", Pair.of("q()", "getDataManager"));
                destDepMap.put("a", Pair.of("a()", "canEnchant"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "flagDirty"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "a"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int,int)", "a"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityWeatherStorm)", "strikeLightning"));
                destDepMap.put("c", Pair.of("c(int)", "setWeatherDuration"));
                destDepMap.put("b", Pair.of("b(int)", "setThunderDuration"));
                destDepMap.put("b", Pair.of("b()", "getSeed"));
                destDepMap.put("l", Pair.of("l()", "hasStorm"));
                destDepMap.put("m", Pair.of("m()", "getWeatherDuration"));
                destDepMap.put("j", Pair.of("j()", "isThundering"));
                destDepMap.put("k", Pair.of("k()", "getThunderDuration"));
                destDepMap.put("b", Pair.of("b(boolean)", "setStorm"));
                destDepMap.put("a", Pair.of("a(boolean)", "setThundering"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getBlock"));
                destDepMap.put("a", Pair.of("a(byte[],int,int,int,int,int,int,int)", "getData"));
                destDepMap.put("setHandle", Pair.of("setHandle(net.minecraft.server.EntityPlayer)", "d"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setRawTypeId"));
                destDepMap.put("d", Pair.of("d(int,int)", "queueUnload"));
                destDepMap.put("g", Pair.of("g(int,int,int)", "notify"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityItem)", "addEntity"));
                destDepMap.put("c", Pair.of("c(int,int)", "setPositionRotation"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityArrow)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityMinecart)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityBoat)", "addEntity"));
                destDepMap.put("a", Pair.of("a(long)", "setTime"));
                destDepMap.put("t", Pair.of("t()", "saveLevel"));
                destDepMap.put("a", Pair.of("a(boolean,null)", "saveChunks"));
                destDepMap.put("d", Pair.of("d(int,int)", "getHighestBlockYAt"));
                destDepMap.put("m", Pair.of("m()", "getSpawn"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "setSpawn"));
                destDepMap.put("a", Pair.of("a(int,int)", "isChunkLoaded"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("a", Pair.of("a()", "unloadQueue"));
                destDepMap.put("e", Pair.of("e()", "chunks"));
                destDepMap.put("f", Pair.of("f()", "chunkList"));
                destDepMap.put("a", Pair.of("a()", "setPosition"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityLiving)", "addEntity"));
                destDepMap.put("l", Pair.of("l()", "getTime"));
                destDepMap.put("b", Pair.of("b()", "entityList"));
                destDepMap.put("o", Pair.of("o()", "chunkProvider"));
                destDepMap.put("q", Pair.of("q()", "worldData"));
                destDepMap.put("c", Pair.of("c(int,int)", "getChunkAt"));
                destDepMap.put("e", Pair.of("e()", "removeEntities"));
                destDepMap.put("b", Pair.of("b(org.bukkit.Chunk)", "saveChunk"));
                destDepMap.put("a", Pair.of("a(org.bukkit.Chunk)", "saveChunkNOP"));
                destDepMap.put("c", Pair.of("c()", "chunkProvider"));
                destDepMap.put("c", Pair.of("c()", "loadNOP"));
                destDepMap.put("d", Pair.of("d()", "addEntities"));
                destDepMap.put("b", Pair.of("b()", "emptyChunk"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("e", Pair.of("e(int,int)", "loadChunk"));
                destDepMap.put("g", Pair.of("g()", "world"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.ChunkProviderServer,int,int)", "getChunkAt"));
                destDepMap.put("k", Pair.of("k()", "random"));
                destDepMap.put("a", Pair.of("a()", "getItem"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.Entity,int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a(int)", "damageEntity"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setRawTypeId"));
                destDepMap.put("b", Pair.of("b()", "setLocation"));
                destDepMap.put("aZ", Pair.of("aZ()", "velocityChanged"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.WorldServer)", "setPlayerFileData"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.ServerCommand)", "handle"));
                destDepMap.put("w", Pair.of("w()", "q"));
                destDepMap.put("u", Pair.of("u()", "q"));
                destDepMap.put("l", Pair.of("l()", "k"));
                destDepMap.put("add", Pair.of("add(net.minecraft.server.AxisAlignedBB)", "iterator"));
                destDepMap.put("clear", Pair.of("clear()", "iterator"));
                destDepMap.put("FIREBALL", Pair.of("FIREBALL()", "UNKNOWN"));
                destDepMap.put("size", Pair.of("size()", "values"));
                destDepMap.put("setTime", Pair.of("setTime(long)", "setDayTime"));
                destDepMap.put("F", Pair.of("F()", "getDayTime"));
                destDepMap.put("a", Pair.of("a()", "c"));
                destDepMap.put("o", Pair.of("o()", "remove"));
                destDepMap.put("d", Pair.of("d()", "isEmpty"));
                destDepMap.put("m", Pair.of("m()", "triggerHealthUpdate"));
                destDepMap.put("a", Pair.of("a(float,float)", "shoot"));
                destDepMap.put("b", Pair.of("b(org.bukkit.craftbukkit.entity.Entity)", "getEntities"));
                destDepMap.put("b", Pair.of("b(double,double,double)", "grow"));
                destDepMap.put("SHRUBLAND", Pair.of("SHRUBLAND()", "RIVER"));
                destDepMap.put("ICE_DESERT", Pair.of("ICE_DESERT()", "EXTREME_HILLS"));
                destDepMap.put("TUNDRA", Pair.of("TUNDRA()", "OCEAN"));
                destDepMap.put("clear", Pair.of("clear()", "get"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "setTypeIdAndData"));
                destDepMap.put("d", Pair.of("d()", "a"));
                destDepMap.put("e", Pair.of("e()", "b"));
                destDepMap.put("stripColor", Pair.of("stripColor()", "b"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "d"));
                destDepMap.put("getServer", Pair.of("getServer()", "getTag"));
                destDepMap.put("getWorlds", Pair.of("getWorlds()", "getServerConfigurationManager"));
                destDepMap.put("PortalTravelAgent", Pair.of("org.bukkit.craftbukkit.PortalTravelAgent()", "Object"));
                destDepMap.put("QueuedPacket", Pair.of("org.bukkit.craftbukkit.ChunkCompressionThread$QueuedPacket(net.minecraft.server.EntityPlayer,net.minecraft.server.Packet,boolean)", "QueuedPacket"));
                destDepMap.put("h", Pair.of("h()", "i"));
                destDepMap.put("getUUID", Pair.of("getUUID()", "getDataManager"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("setSpawnRadius", Pair.of("setSpawnRadius()", "convert"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.util.UnsafeList()", "ArrayList"));
                destDepMap.put("unsafeGet", Pair.of("unsafeGet(int)", "next"));
                destDepMap.put("setSneak", Pair.of("setSneak(boolean)", "setSneaking"));
                destDepMap.put("canSave", Pair.of("canSave()", "savingDisabled"));
                destDepMap.put("b", Pair.of("b(java.lang.String,boolean)", "setBoolean"));
                destDepMap.put("c", Pair.of("c(net.minecraft.server.EntityPlayer)", "clear"));
                destDepMap.put("b", Pair.of("b(net.minecraft.server.EntityPlayer)", "updatePlayer"));
                destDepMap.put("c", Pair.of("c()", "id"));
                destDepMap.put("a", Pair.of("a()", "count"));
                destDepMap.put("d", Pair.of("d()", "damage"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "getTypeId"));
                destDepMap.put("b", Pair.of("b(int,int,int)", "getData"));
                destDepMap.put("m", Pair.of("m(int,int,int)", "getTileEntity"));
                destDepMap.put("m", Pair.of("m()", "spawnX"));
                destDepMap.put("o", Pair.of("o()", "spawnZ"));
                destDepMap.put("server", Pair.of("server()", "playerList"));
                destDepMap.put("getPlayerManager", Pair.of("getPlayerManager()", "getPlayerChunkMap"));
                destDepMap.put("toBukkitRotation", Pair.of("toBukkitRotation(int)", "asBukkitCopy"));
                destDepMap.put("asBukkitCopy", Pair.of("asBukkitCopy()", "toBukkitRotation"));
                destDepMap.put("r", Pair.of("r()", "t"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d(int,int)", "c"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int)", "setType"));
                destDepMap.put("RED", Pair.of("RED()", "WHITE"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.monksanctum.MineQuest.Listener.MineQuestPlayerListener,org.monksanctum.MineQuest.MineQuest)", "registerEvents"));
                destDepMap.put("getName", Pair.of("getName()", "getPlayerName"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,byte)", "Object"));
                destDepMap.put("LOWEST", Pair.of("LOWEST()", "LOW"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender,java.lang.String)", "sendMessage"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("getValue", Pair.of("getValue()", "equalsIgnoreCase"));
                destDepMap.put("getId", Pair.of("getId()", "ordinal"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.krinsoft.teleportsuite.listeners.EntityListener,net.krinsoft.teleportsuite.TeleportSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.krinsoft.teleportsuite.listeners.PlayerListener,net.krinsoft.teleportsuite.TeleportSuite)", "registerCommand"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.krinsoft.teleportsuite.listeners.ServerListener,net.krinsoft.teleportsuite.TeleportSuite)", "registerCommand"));
                destDepMap.put("MONITOR", Pair.of("MONITOR()", "LOWEST"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "first"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getItemMeta"));
                destDepMap.put("getItemMeta", Pair.of("getItemMeta()", "getInstance"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setTypeIdAndData"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendPartyMessage"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.robinjam.bukkit.ports.PlayerListener,net.robinjam.bukkit.ports.Ports)", "registerEvents"));
                destDepMap.put("getId", Pair.of("getId()", "getDuration"));
                destDepMap.put("getDouble", Pair.of("getDouble(java.lang.String)", "getInt"));
                destDepMap.put("HIGH", Pair.of("HIGH()", "LOW"));
                destDepMap.put("setLevel", Pair.of("setLevel(int)", "giveExp"));
                destDepMap.put("getTotalExperience", Pair.of("getTotalExperience()", "calcExperience"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getNetwork"));
                destDepMap.put("getPlayers", Pair.of("getPlayers()", "getNetwork"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.dinnerbone.bukkit.sample.SamplePlayerListener,com.dinnerbone.bukkit.sample.SamplePlugin)", "registerEvents"));
                destDepMap.put("teleportTo", Pair.of("teleportTo(org.bukkit.Location)", "teleport"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("getName", Pair.of("getName()", "getGroup"));
                destDepMap.put("getLivingEntities", Pair.of("getLivingEntities()", "getEntitiesByClasses"));
                destDepMap.put("getOnlineMode", Pair.of("getOnlineMode()", "substring"));
                destDepMap.put("getScheduler", Pair.of("getScheduler()", "getWorlds"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(ca.mcpnet.RailDriver.RailDriverBlockListener,ca.mcpnet.RailDriver.RailDriver)", "registerEvents"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "get"));
                destDepMap.put("setAmount", Pair.of("setAmount(int)", "getAmount"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getName"));
                destDepMap.put("getMaterial", Pair.of("getMaterial()", "matchMaterial"));
                destDepMap.put("getName", Pair.of("getName()", "getTransaction"));
                destDepMap.put("SPONGE", Pair.of("SPONGE()", "STONE_PLATE"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.hackhalo2.creative.PixlPlayer,com.hackhalo2.creative.Pixl)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.hackhalo2.creative.PixlBlock,com.hackhalo2.creative.Pixl)", "registerEvents"));
                destDepMap.put("setData", Pair.of("setData(byte)", "rotateData"));
                destDepMap.put("getData", Pair.of("getData()", "Type"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender,java.lang.String)", "sendMessage"));
                destDepMap.put("getValue", Pair.of("getValue()", "equalsIgnoreCase"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendEmptyMsg"));
                destDepMap.put("LIGHT_PURPLE", Pair.of("LIGHT_PURPLE()", "GOLD"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendMsg"));
                destDepMap.put("HIGHEST", Pair.of("HIGHEST()", "NORMAL"));
                destDepMap.put("setJoinMessage", Pair.of("setJoinMessage()", "sendMessage"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "AQUA"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(hef.IRCTransport.IRCTransportPlayerListener,hef.IRCTransport.IRCTransport)", "registerEvents"));
                destDepMap.put("getValues", Pair.of("getValues(boolean)", "createSection"));
                destDepMap.put("setHatchType", Pair.of("setHatchType()", "setHatchingType"));
                destDepMap.put("setCreatureType", Pair.of("setCreatureType(org.bukkit.entity.CreatureType)", "setCreatureTypeByName"));
                destDepMap.put("getIntList", Pair.of("getIntList(java.lang.String,null)", "get"));
                destDepMap.put("setDisplayName", Pair.of("setDisplayName()", "save"));
                destDepMap.put("setItemMeta", Pair.of("setItemMeta(org.bukkit.inventory.meta.ItemMeta)", "isNamingItem"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int)", "Object"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int)", "Object"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.mcbouncer.bukkit.BukkitPlayerListener,com.mcbouncer.bukkit.BukkitServer)", "registerEvents"));
                destDepMap.put("DARK_GREEN", Pair.of("DARK_GREEN()", "GRAY"));
                destDepMap.put("getStringList", Pair.of("getStringList(java.lang.String)", "options"));
                destDepMap.put("getBoolean", Pair.of("getBoolean(java.lang.String)", "options"));
                destDepMap.put("DARK_RED", Pair.of("DARK_RED()", "length"));
                destDepMap.put("GRAY", Pair.of("GRAY()", "WHITE"));
                destDepMap.put("getDisplayName", Pair.of("getDisplayName()", "getName"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "getPlayer"));
                destDepMap.put("getName", Pair.of("getName()", "toPlayer"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "verifyClan"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "execute"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "log"));
                destDepMap.put("getType", Pair.of("getType()", "getTypeId"));
                destDepMap.put("getName", Pair.of("getName()", "toLowerCase"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendPartyMessage"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getVelocity"));
                destDepMap.put("fromId", Pair.of("fromId(int)", "getEntityType"));
                destDepMap.put("fromId", Pair.of("fromId(java.lang.Integer)", "entityType"));
                destDepMap.put("fromId", Pair.of("fromId(int)", "entityType"));
                destDepMap.put("getCreatureType", Pair.of("getCreatureType()", "getSpawnedType"));
                destDepMap.put("setCreatureType", Pair.of("setCreatureType()", "setSpawnedType"));
                destDepMap.put("getBlock", Pair.of("getBlock()", "getById"));
                destDepMap.put("getTo", Pair.of("getTo()", "getPlayer"));
                destDepMap.put("set", Pair.of("set(java.lang.String,java.util.List<java.lang.String>)", "remove"));
                destDepMap.put("OP", Pair.of("OP()", "TRUE"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getOfflinePlayer"));
                destDepMap.put("isInitialized", Pair.of("isInitialized()", "isEnabled"));
                destDepMap.put("values", Pair.of("values()", "keySet"));
                destDepMap.put("getProvider", Pair.of("getProvider()", "getBoolean"));
                destDepMap.put("getChar", Pair.of("getChar()", "get"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "append"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "append"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "SendFormatMessage"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getXpToNextLevel"));
                destDepMap.put("getDataFolder", Pair.of("getDataFolder()", "toLowerCase"));
                destDepMap.put("getProperty", Pair.of("getProperty(java.lang.String)", "get"));
                destDepMap.put("CHEST", Pair.of("CHEST()", "DROPPER"));
                destDepMap.put("getType", Pair.of("getType()", "getState"));
                destDepMap.put("w", Pair.of("w()", "q"));
                destDepMap.put("u", Pair.of("u()", "q"));
                destDepMap.put("l", Pair.of("l()", "k"));
                destDepMap.put("c", Pair.of("c()", "id"));
                destDepMap.put("a", Pair.of("a()", "count"));
                destDepMap.put("d", Pair.of("d()", "damage"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "getTypeId"));
                destDepMap.put("b", Pair.of("b(int,int,int)", "getData"));
                destDepMap.put("m", Pair.of("m(int,int,int)", "getTileEntity"));
                destDepMap.put("m", Pair.of("m()", "spawnX"));
                destDepMap.put("o", Pair.of("o()", "spawnZ"));
                destDepMap.put("r", Pair.of("r()", "t"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d(int,int)", "c"));
                destDepMap.put("getFace", Pair.of("getFace(org.bukkit.block.BlockFace)", "getRelative"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("valueOf", Pair.of("valueOf(java.lang.String)", "environment"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "removeStargate"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int)", "getType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getClickedBlock", Pair.of("getClickedBlock()", "getGateTeleportSign"));
                destDepMap.put("getType", Pair.of("getType()", "getGateTeleportSign"));
                destDepMap.put("getAction", Pair.of("getAction()", "getGateTeleportSign"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getGateNetwork"));
                destDepMap.put("toString", Pair.of("toString()", "getName"));
                destDepMap.put("p", Pair.of("p()", "getEnchantments"));
                destDepMap.put("b", Pair.of("b(short)", "setData"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "flagDirty"));
                destDepMap.put("aj", Pair.of("aj()", "isAlive"));
                destDepMap.put("a", Pair.of("a()", "canEnchant"));
                destDepMap.put("q", Pair.of("q()", "getDataManager"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "a"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int,int)", "a"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getBlock"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityWeatherStorm)", "strikeLightning"));
                destDepMap.put("c", Pair.of("c(int)", "setWeatherDuration"));
                destDepMap.put("b", Pair.of("b(int)", "setThunderDuration"));
                destDepMap.put("b", Pair.of("b()", "getSeed"));
                destDepMap.put("l", Pair.of("l()", "hasStorm"));
                destDepMap.put("m", Pair.of("m()", "getWeatherDuration"));
                destDepMap.put("j", Pair.of("j()", "isThundering"));
                destDepMap.put("k", Pair.of("k()", "getThunderDuration"));
                destDepMap.put("b", Pair.of("b(boolean)", "setStorm"));
                destDepMap.put("a", Pair.of("a(boolean)", "setThundering"));
                destDepMap.put("a", Pair.of("a(byte[],int,int,int,int,int,int,int)", "getData"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setRawTypeId"));
                destDepMap.put("b", Pair.of("b()", "setLocation"));
                destDepMap.put("aZ", Pair.of("aZ()", "velocityChanged"));
                destDepMap.put("d", Pair.of("d(int,int)", "queueUnload"));
                destDepMap.put("g", Pair.of("g(int,int,int)", "notify"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityItem)", "addEntity"));
                destDepMap.put("c", Pair.of("c(int,int)", "setPositionRotation"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityArrow)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityMinecart)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityBoat)", "addEntity"));
                destDepMap.put("a", Pair.of("a(long)", "setTime"));
                destDepMap.put("t", Pair.of("t()", "saveLevel"));
                destDepMap.put("a", Pair.of("a(boolean,null)", "saveChunks"));
                destDepMap.put("d", Pair.of("d(int,int)", "getHighestBlockYAt"));
                destDepMap.put("m", Pair.of("m()", "getSpawn"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "setSpawn"));
                destDepMap.put("a", Pair.of("a(int,int)", "isChunkLoaded"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("a", Pair.of("a()", "unloadQueue"));
                destDepMap.put("e", Pair.of("e()", "chunks"));
                destDepMap.put("f", Pair.of("f()", "chunkList"));
                destDepMap.put("a", Pair.of("a()", "setPosition"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityLiving)", "addEntity"));
                destDepMap.put("l", Pair.of("l()", "getTime"));
                destDepMap.put("b", Pair.of("b()", "entityList"));
                destDepMap.put("o", Pair.of("o()", "chunkProvider"));
                destDepMap.put("q", Pair.of("q()", "worldData"));
                destDepMap.put("c", Pair.of("c(int,int)", "getChunkAt"));
                destDepMap.put("e", Pair.of("e()", "removeEntities"));
                destDepMap.put("b", Pair.of("b(org.bukkit.Chunk)", "saveChunk"));
                destDepMap.put("a", Pair.of("a(org.bukkit.Chunk)", "saveChunkNOP"));
                destDepMap.put("c", Pair.of("c()", "chunkProvider"));
                destDepMap.put("c", Pair.of("c()", "loadNOP"));
                destDepMap.put("d", Pair.of("d()", "addEntities"));
                destDepMap.put("b", Pair.of("b()", "emptyChunk"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("e", Pair.of("e(int,int)", "loadChunk"));
                destDepMap.put("g", Pair.of("g()", "world"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.ChunkProviderServer,int,int)", "getChunkAt"));
                destDepMap.put("k", Pair.of("k()", "random"));
                destDepMap.put("a", Pair.of("a()", "getItem"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.WorldServer)", "setPlayerFileData"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.ServerCommand)", "handle"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setRawTypeId"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.Entity,int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a(int)", "damageEntity"));
                destDepMap.put("setHandle", Pair.of("setHandle(net.minecraft.server.EntityPlayer)", "d"));
                destDepMap.put("w", Pair.of("w()", "q"));
                destDepMap.put("u", Pair.of("u()", "q"));
                destDepMap.put("l", Pair.of("l()", "k"));
                destDepMap.put("getId", Pair.of("getId()", "getItem"));
                destDepMap.put("aX", Pair.of("aX()", "bc"));
                destDepMap.put("setCompound", Pair.of("setCompound(java.lang.String,org.bukkit.craftbukkit.entity.NBTTagCompound)", "set"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int)", "Object"));
                destDepMap.put("getTypeId", Pair.of("getTypeId(int,int,int)", "getType"));
                destDepMap.put("CraftItemStack", Pair.of("org.bukkit.craftbukkit.inventory.CraftItemStack(int,int,short,org.bukkit.inventory.meta.ItemMeta)", "CraftItemStack"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlock"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "Object"));
                destDepMap.put("setTypeId", Pair.of("setTypeId()", "setType"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setTypeAndData"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int,int)", "setTypeAndData"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlock"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setType"));
                destDepMap.put("add", Pair.of("add(net.minecraft.server.AxisAlignedBB)", "iterator"));
                destDepMap.put("clear", Pair.of("clear()", "iterator"));
                destDepMap.put("FIREBALL", Pair.of("FIREBALL()", "UNKNOWN"));
                destDepMap.put("size", Pair.of("size()", "values"));
                destDepMap.put("setTime", Pair.of("setTime(long)", "setDayTime"));
                destDepMap.put("F", Pair.of("F()", "getDayTime"));
                destDepMap.put("a", Pair.of("a()", "c"));
                destDepMap.put("o", Pair.of("o()", "remove"));
                destDepMap.put("d", Pair.of("d()", "isEmpty"));
                destDepMap.put("m", Pair.of("m()", "triggerHealthUpdate"));
                destDepMap.put("a", Pair.of("a(float,float)", "shoot"));
                destDepMap.put("b", Pair.of("b(org.bukkit.craftbukkit.entity.Entity)", "getEntities"));
                destDepMap.put("b", Pair.of("b(double,double,double)", "grow"));
                destDepMap.put("SHRUBLAND", Pair.of("SHRUBLAND()", "OCEAN"));
                destDepMap.put("ICE_DESERT", Pair.of("ICE_DESERT()", "EXTREME_HILLS"));
                destDepMap.put("TUNDRA", Pair.of("TUNDRA()", "RIVER"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "setTypeIdAndData"));
                destDepMap.put("setRawTypeIdAndData", Pair.of("setRawTypeIdAndData(int,int,int,int,int)", "setTypeAndData"));
                destDepMap.put("clear", Pair.of("clear()", "get"));
                destDepMap.put("stripColor", Pair.of("stripColor()", "b"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.util.UnsafeList()", "ArrayList"));
                destDepMap.put("unsafeGet", Pair.of("unsafeGet(int)", "next"));
                destDepMap.put("QueuedPacket", Pair.of("org.bukkit.craftbukkit.ChunkCompressionThread$QueuedPacket(net.minecraft.server.EntityPlayer,net.minecraft.server.Packet,boolean)", "QueuedPacket"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "d"));
                destDepMap.put("getServer", Pair.of("getServer()", "getTag"));
                destDepMap.put("getWorlds", Pair.of("getWorlds()", "getServerConfigurationManager"));
                destDepMap.put("PortalTravelAgent", Pair.of("org.bukkit.craftbukkit.PortalTravelAgent()", "Object"));
                destDepMap.put("setSneak", Pair.of("setSneak(boolean)", "setSneaking"));
                destDepMap.put("getUUID", Pair.of("getUUID()", "getDataManager"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d()", "a"));
                destDepMap.put("e", Pair.of("e()", "b"));
                destDepMap.put("h", Pair.of("h()", "i"));
                destDepMap.put("setSpawnRadius", Pair.of("setSpawnRadius()", "convert"));
                destDepMap.put("b", Pair.of("b(java.lang.String,boolean)", "setBoolean"));
                destDepMap.put("canSave", Pair.of("canSave()", "savingDisabled"));
                destDepMap.put("c", Pair.of("c(net.minecraft.server.EntityPlayer)", "clear"));
                destDepMap.put("b", Pair.of("b(net.minecraft.server.EntityPlayer)", "updatePlayer"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "getTypeId"));
                destDepMap.put("b", Pair.of("b(int,int,int)", "getData"));
                destDepMap.put("m", Pair.of("m(int,int,int)", "getTileEntity"));
                destDepMap.put("m", Pair.of("m()", "spawnX"));
                destDepMap.put("o", Pair.of("o()", "spawnZ"));
                destDepMap.put("c", Pair.of("c()", "id"));
                destDepMap.put("a", Pair.of("a()", "count"));
                destDepMap.put("d", Pair.of("d()", "damage"));
                destDepMap.put("getPlayerManager", Pair.of("getPlayerManager()", "getPlayerChunkMap"));
                destDepMap.put("server", Pair.of("server()", "playerList"));
                destDepMap.put("aW", Pair.of("aW()", "aX"));
                destDepMap.put("toBukkitRotation", Pair.of("toBukkitRotation(int)", "asBukkitCopy"));
                destDepMap.put("asBukkitCopy", Pair.of("asBukkitCopy()", "toBukkitRotation"));
                destDepMap.put("r", Pair.of("r()", "t"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d(int,int)", "c"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.ChaseHQ.Statistician.Listeners.BlockListener,com.ChaseHQ.Statistician.StatisticianPlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.ChaseHQ.Statistician.Listeners.EntityListener,com.ChaseHQ.Statistician.StatisticianPlugin)", "registerEvents"));
                destDepMap.put("getProperty", Pair.of("getProperty(java.lang.String)", "getString"));
                destDepMap.put("isSitting", Pair.of("isSitting()", "isTame"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("getTime", Pair.of("getTime()", "getFullTime"));
                destDepMap.put("getTarget", Pair.of("getTarget()", "isSitting"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "getChunk"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getSetting"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getWorld"));
                destDepMap.put("getUniqueId", Pair.of("getUniqueId()", "getWorld"));
                destDepMap.put("builder", Pair.of("builder()", "getLocation"));
                destDepMap.put("getServer", Pair.of("getServer()", "getWorld"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "runLines"));
                destDepMap.put("RIGHT_CLICK_BLOCK", Pair.of("RIGHT_CLICK_BLOCK()", "LEVER"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getType", Pair.of("getType()", "getHitBox"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "getGame"));
                destDepMap.put("getEnchanter", Pair.of("getEnchanter()", "getPlayer"));
                destDepMap.put("load", Pair.of("load()", "getInt"));
                destDepMap.put("IRON_DOOR", Pair.of("IRON_DOOR()", "chatPrev"));
                destDepMap.put("CAULDRON", Pair.of("CAULDRON()", "bedPrev"));
                destDepMap.put("WOOD_PLATE", Pair.of("WOOD_PLATE()", "sprintPrev"));
                destDepMap.put("LAVA_BUCKET", Pair.of("LAVA_BUCKET()", "STARVATION"));
                destDepMap.put("RED", Pair.of("RED()", "DARK_RED"));
                destDepMap.put("getTotalExperience", Pair.of("getTotalExperience()", "max"));
                destDepMap.put("getExp", Pair.of("getExp()", "max"));
                destDepMap.put("getEntity", Pair.of("getEntity()", "getPlayer"));
                destDepMap.put("ARROW", Pair.of("ARROW()", "BLAZE_POWDER"));
                destDepMap.put("addEntity", Pair.of("addEntity(net.minecraft.server.v1_4_5.EntityItemFrame)", "setFacingDirection"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(de.beimax.buycommand.listeners.BuyCommandPlayerListener,de.beimax.buycommand.BuyCommand)", "registerEvents"));
                destDepMap.put("getEvent", Pair.of("getEvent()", "invoke"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int)", "setType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlockTypeId"));
                destDepMap.put("getBlockTypeIdAt", Pair.of("getBlockTypeIdAt(int,int,int)", "getBlockTypeId"));
                destDepMap.put("set", Pair.of("set(java.lang.String,java.util.List<java.lang.String>)", "remove"));
                destDepMap.put("getTo", Pair.of("getTo()", "getPlayer"));
                destDepMap.put("asBukkitCopy", Pair.of("asBukkitCopy(org.bukkit.inventory.ItemStack)", "toList"));
                destDepMap.put("setExperience", Pair.of("setExperience(int)", "awardExperience"));
                destDepMap.put("addEnchant", Pair.of("addEnchant(boolean)", "addStoredEnchant"));
                destDepMap.put("getDisplayName", Pair.of("getDisplayName()", "getName"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int,byte,int)", "setTypeAndData"));
                destDepMap.put("setTypeAndData", Pair.of("setTypeAndData(int,int,int,byte,int)", "setTypeUpdate"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String)", "getStringList"));
                destDepMap.put("set", Pair.of("set(java.lang.String,null)", "getStringList"));
                destDepMap.put("RecipeIterator", Pair.of("org.bukkit.craftbukkit.v1_4_R1.inventory.RecipeIterator()", "RecipeIterator"));
                destDepMap.put("RecipeIterator", Pair.of("org.bukkit.craftbukkit.v1_5_R2.inventory.RecipeIterator()", "RecipeIterator"));
                destDepMap.put("RecipeIterator", Pair.of("org.bukkit.craftbukkit.v1_5_R3.inventory.RecipeIterator()", "RecipeIterator"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.dinnerbone.bukkit.sample.SamplePlayerListener,com.dinnerbone.bukkit.sample.SamplePlugin)", "registerEvents"));
                destDepMap.put("teleportTo", Pair.of("teleportTo(org.bukkit.Location)", "teleport"));
                destDepMap.put("getSpecies", Pair.of("getSpecies()", "length"));
                destDepMap.put("getConfig", Pair.of("getConfig()", "length"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "commit"));
                destDepMap.put("getLevel", Pair.of("getLevel()", "getExpToLevel"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "BLUE"));
                destDepMap.put("GREEN", Pair.of("GREEN()", "BOLD"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.monksanctum.MineQuest.Listener.MineQuestPlayerListener,org.monksanctum.MineQuest.MineQuest)", "registerEvents"));
                destDepMap.put("createNMSItemStack", Pair.of("createNMSItemStack(net.minecraft.server.v1_4_5.ItemStack)", "asNMSCopy"));
                destDepMap.put("CraftInventoryBrewer", Pair.of("org.bukkit.craftbukkit.v1_6_R3.inventory.CraftInventoryBrewer(me.cybermaxke.mobiletools.MobilePlayer.EntityBrewingStand)", "CraftInventoryBrewer"));
                destDepMap.put("CraftInventoryFurnace", Pair.of("org.bukkit.craftbukkit.v1_6_R3.inventory.CraftInventoryFurnace(me.cybermaxke.mobiletools.MobilePlayer.EntityFurnace)", "CraftInventoryFurnace"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "getInventory"));
                destDepMap.put("SWAMPLAND_MOUNTAINS", Pair.of("SWAMPLAND_MOUNTAINS()", "MUTATED_SWAMPLAND"));
                destDepMap.put("Configuration", Pair.of("org.bukkit.util.config.Configuration(java.io.File)", "YamlConfiguration"));
                destDepMap.put("getAll", Pair.of("getAll()", "getValues"));
                destDepMap.put("getProperty", Pair.of("getProperty(java.lang.String)", "getString"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String)", "set"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer()", "getScore"));
                destDepMap.put("p", Pair.of("p()", "getEnchantments"));
                destDepMap.put("b", Pair.of("b(short)", "setData"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "flagDirty"));
                destDepMap.put("q", Pair.of("q()", "getDataManager"));
                destDepMap.put("a", Pair.of("a()", "canEnchant"));
                destDepMap.put("aj", Pair.of("aj()", "isAlive"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int,int)", "a"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "a"));
                destDepMap.put("a", Pair.of("a(byte[],int,int,int,int,int,int,int)", "getData"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getBlock"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityWeatherStorm)", "strikeLightning"));
                destDepMap.put("c", Pair.of("c(int)", "setWeatherDuration"));
                destDepMap.put("b", Pair.of("b(int)", "setThunderDuration"));
                destDepMap.put("b", Pair.of("b()", "getSeed"));
                destDepMap.put("l", Pair.of("l()", "hasStorm"));
                destDepMap.put("m", Pair.of("m()", "getWeatherDuration"));
                destDepMap.put("j", Pair.of("j()", "isThundering"));
                destDepMap.put("k", Pair.of("k()", "getThunderDuration"));
                destDepMap.put("b", Pair.of("b(boolean)", "setStorm"));
                destDepMap.put("a", Pair.of("a(boolean)", "setThundering"));
                destDepMap.put("setHandle", Pair.of("setHandle(net.minecraft.server.EntityPlayer)", "d"));
                destDepMap.put("b", Pair.of("b()", "setLocation"));
                destDepMap.put("aZ", Pair.of("aZ()", "velocityChanged"));
                destDepMap.put("d", Pair.of("d(int,int)", "queueUnload"));
                destDepMap.put("g", Pair.of("g(int,int,int)", "notify"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityItem)", "addEntity"));
                destDepMap.put("c", Pair.of("c(int,int)", "setPositionRotation"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityArrow)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityMinecart)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityBoat)", "addEntity"));
                destDepMap.put("a", Pair.of("a(long)", "setTime"));
                destDepMap.put("t", Pair.of("t()", "saveLevel"));
                destDepMap.put("a", Pair.of("a(boolean,null)", "saveChunks"));
                destDepMap.put("d", Pair.of("d(int,int)", "getHighestBlockYAt"));
                destDepMap.put("m", Pair.of("m()", "getSpawn"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "setSpawn"));
                destDepMap.put("a", Pair.of("a(int,int)", "isChunkLoaded"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("a", Pair.of("a()", "unloadQueue"));
                destDepMap.put("e", Pair.of("e()", "chunks"));
                destDepMap.put("f", Pair.of("f()", "chunkList"));
                destDepMap.put("a", Pair.of("a()", "setPosition"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityLiving)", "addEntity"));
                destDepMap.put("l", Pair.of("l()", "getTime"));
                destDepMap.put("b", Pair.of("b()", "entityList"));
                destDepMap.put("o", Pair.of("o()", "chunkProvider"));
                destDepMap.put("q", Pair.of("q()", "worldData"));
                destDepMap.put("c", Pair.of("c(int,int)", "getChunkAt"));
                destDepMap.put("e", Pair.of("e()", "removeEntities"));
                destDepMap.put("b", Pair.of("b(org.bukkit.Chunk)", "saveChunk"));
                destDepMap.put("a", Pair.of("a(org.bukkit.Chunk)", "saveChunkNOP"));
                destDepMap.put("c", Pair.of("c()", "chunkProvider"));
                destDepMap.put("c", Pair.of("c()", "loadNOP"));
                destDepMap.put("d", Pair.of("d()", "addEntities"));
                destDepMap.put("b", Pair.of("b()", "emptyChunk"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("e", Pair.of("e(int,int)", "loadChunk"));
                destDepMap.put("g", Pair.of("g()", "world"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.ChunkProviderServer,int,int)", "getChunkAt"));
                destDepMap.put("k", Pair.of("k()", "random"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.WorldServer)", "setPlayerFileData"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.ServerCommand)", "handle"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.Entity,int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a(int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a()", "getItem"));
                destDepMap.put("w", Pair.of("w()", "q"));
                destDepMap.put("u", Pair.of("u()", "q"));
                destDepMap.put("l", Pair.of("l()", "k"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int)", "Object"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlock"));
                destDepMap.put("getTypeId", Pair.of("getTypeId(int,int,int)", "getType"));
                destDepMap.put("CraftItemStack", Pair.of("org.bukkit.craftbukkit.inventory.CraftItemStack(int,int,short,org.bukkit.inventory.meta.ItemMeta)", "CraftItemStack"));
                destDepMap.put("aX", Pair.of("aX()", "bc"));
                destDepMap.put("setCompound", Pair.of("setCompound(java.lang.String,org.bukkit.craftbukkit.entity.NBTTagCompound)", "set"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int,int)", "setTypeAndData"));
                destDepMap.put("getId", Pair.of("getId()", "getItem"));
                destDepMap.put("setTypeId", Pair.of("setTypeId()", "setType"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setType"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setTypeUpdate"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlock"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "Object"));
                destDepMap.put("size", Pair.of("size()", "values"));
                destDepMap.put("add", Pair.of("add(net.minecraft.server.AxisAlignedBB)", "iterator"));
                destDepMap.put("clear", Pair.of("clear()", "iterator"));
                destDepMap.put("FIREBALL", Pair.of("FIREBALL()", "UNKNOWN"));
                destDepMap.put("a", Pair.of("a()", "c"));
                destDepMap.put("setTime", Pair.of("setTime(long)", "setDayTime"));
                destDepMap.put("F", Pair.of("F()", "getDayTime"));
                destDepMap.put("o", Pair.of("o()", "remove"));
                destDepMap.put("d", Pair.of("d()", "isEmpty"));
                destDepMap.put("m", Pair.of("m()", "triggerHealthUpdate"));
                destDepMap.put("b", Pair.of("b(org.bukkit.craftbukkit.entity.Entity)", "getEntities"));
                destDepMap.put("b", Pair.of("b(double,double,double)", "grow"));
                destDepMap.put("a", Pair.of("a(float,float)", "shoot"));
                destDepMap.put("SHRUBLAND", Pair.of("SHRUBLAND()", "RIVER"));
                destDepMap.put("ICE_DESERT", Pair.of("ICE_DESERT()", "EXTREME_HILLS"));
                destDepMap.put("TUNDRA", Pair.of("TUNDRA()", "OCEAN"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "setTypeIdAndData"));
                destDepMap.put("clear", Pair.of("clear()", "get"));
                destDepMap.put("QueuedPacket", Pair.of("org.bukkit.craftbukkit.ChunkCompressionThread$QueuedPacket(net.minecraft.server.EntityPlayer,net.minecraft.server.Packet,boolean)", "QueuedPacket"));
                destDepMap.put("stripColor", Pair.of("stripColor()", "b"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "d"));
                destDepMap.put("getServer", Pair.of("getServer()", "getTag"));
                destDepMap.put("getWorlds", Pair.of("getWorlds()", "getServerConfigurationManager"));
                destDepMap.put("PortalTravelAgent", Pair.of("org.bukkit.craftbukkit.PortalTravelAgent()", "Object"));
                destDepMap.put("setSneak", Pair.of("setSneak(boolean)", "setSneaking"));
                destDepMap.put("d", Pair.of("d()", "a"));
                destDepMap.put("e", Pair.of("e()", "b"));
                destDepMap.put("getUUID", Pair.of("getUUID()", "getDataManager"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.util.UnsafeList()", "ArrayList"));
                destDepMap.put("unsafeGet", Pair.of("unsafeGet(int)", "next"));
                destDepMap.put("h", Pair.of("h()", "i"));
                destDepMap.put("setSpawnRadius", Pair.of("setSpawnRadius()", "convert"));
                destDepMap.put("b", Pair.of("b(java.lang.String,boolean)", "setBoolean"));
                destDepMap.put("canSave", Pair.of("canSave()", "savingDisabled"));
                destDepMap.put("c", Pair.of("c(net.minecraft.server.EntityPlayer)", "clear"));
                destDepMap.put("b", Pair.of("b(net.minecraft.server.EntityPlayer)", "updatePlayer"));
                destDepMap.put("c", Pair.of("c()", "id"));
                destDepMap.put("a", Pair.of("a()", "count"));
                destDepMap.put("d", Pair.of("d()", "damage"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "getTypeId"));
                destDepMap.put("b", Pair.of("b(int,int,int)", "getData"));
                destDepMap.put("m", Pair.of("m(int,int,int)", "getTileEntity"));
                destDepMap.put("m", Pair.of("m()", "spawnX"));
                destDepMap.put("o", Pair.of("o()", "spawnZ"));
                destDepMap.put("getPlayerManager", Pair.of("getPlayerManager()", "getPlayerChunkMap"));
                destDepMap.put("server", Pair.of("server()", "playerList"));
                destDepMap.put("aW", Pair.of("aW()", "aX"));
                destDepMap.put("toBukkitRotation", Pair.of("toBukkitRotation(int)", "asBukkitCopy"));
                destDepMap.put("asBukkitCopy", Pair.of("asBukkitCopy()", "toBukkitRotation"));
                destDepMap.put("r", Pair.of("r()", "t"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d(int,int)", "c"));
                destDepMap.put("translateAlternateColorCodes", Pair.of("translateAlternateColorCodes(char,java.lang.String)", "getColoredName"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer(java.lang.String)", "getName"));
                destDepMap.put("getWorlds", Pair.of("getWorlds()", "getName"));
                destDepMap.put("isInitialized", Pair.of("isInitialized()", "isEnabled"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getEyeLocation"));
                destDepMap.put("getShooter", Pair.of("getShooter()", "getPlayer"));
                destDepMap.put("aj", Pair.of("aj()", "isAlive"));
                destDepMap.put("p", Pair.of("p()", "getEnchantments"));
                destDepMap.put("b", Pair.of("b(short)", "setData"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "flagDirty"));
                destDepMap.put("a", Pair.of("a()", "canEnchant"));
                destDepMap.put("q", Pair.of("q()", "getDataManager"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int,int)", "a"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "a"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityWeatherStorm)", "strikeLightning"));
                destDepMap.put("c", Pair.of("c(int)", "setWeatherDuration"));
                destDepMap.put("b", Pair.of("b(int)", "setThunderDuration"));
                destDepMap.put("b", Pair.of("b()", "getSeed"));
                destDepMap.put("l", Pair.of("l()", "hasStorm"));
                destDepMap.put("m", Pair.of("m()", "getWeatherDuration"));
                destDepMap.put("j", Pair.of("j()", "isThundering"));
                destDepMap.put("k", Pair.of("k()", "getThunderDuration"));
                destDepMap.put("b", Pair.of("b(boolean)", "setStorm"));
                destDepMap.put("a", Pair.of("a(boolean)", "setThundering"));
                destDepMap.put("a", Pair.of("a(byte[],int,int,int,int,int,int,int)", "getData"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getBlock"));
                destDepMap.put("setHandle", Pair.of("setHandle(net.minecraft.server.EntityPlayer)", "d"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setRawTypeId"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.Entity,int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a(int)", "damageEntity"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.WorldServer)", "setPlayerFileData"));
                destDepMap.put("a", Pair.of("a(net.minecraft.server.ServerCommand)", "handle"));
                destDepMap.put("d", Pair.of("d(int,int)", "queueUnload"));
                destDepMap.put("g", Pair.of("g(int,int,int)", "notify"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityItem)", "addEntity"));
                destDepMap.put("c", Pair.of("c(int,int)", "setPositionRotation"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityArrow)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityMinecart)", "addEntity"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityBoat)", "addEntity"));
                destDepMap.put("a", Pair.of("a(long)", "setTime"));
                destDepMap.put("t", Pair.of("t()", "saveLevel"));
                destDepMap.put("a", Pair.of("a(boolean,null)", "saveChunks"));
                destDepMap.put("d", Pair.of("d(int,int)", "getHighestBlockYAt"));
                destDepMap.put("m", Pair.of("m()", "getSpawn"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "setSpawn"));
                destDepMap.put("a", Pair.of("a(int,int)", "isChunkLoaded"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("a", Pair.of("a()", "unloadQueue"));
                destDepMap.put("e", Pair.of("e()", "chunks"));
                destDepMap.put("f", Pair.of("f()", "chunkList"));
                destDepMap.put("a", Pair.of("a()", "setPosition"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.EntityLiving)", "addEntity"));
                destDepMap.put("l", Pair.of("l()", "getTime"));
                destDepMap.put("b", Pair.of("b()", "entityList"));
                destDepMap.put("o", Pair.of("o()", "chunkProvider"));
                destDepMap.put("q", Pair.of("q()", "worldData"));
                destDepMap.put("c", Pair.of("c(int,int)", "getChunkAt"));
                destDepMap.put("e", Pair.of("e()", "removeEntities"));
                destDepMap.put("b", Pair.of("b(org.bukkit.Chunk)", "saveChunk"));
                destDepMap.put("a", Pair.of("a(org.bukkit.Chunk)", "saveChunkNOP"));
                destDepMap.put("c", Pair.of("c()", "chunkProvider"));
                destDepMap.put("c", Pair.of("c()", "loadNOP"));
                destDepMap.put("d", Pair.of("d()", "addEntities"));
                destDepMap.put("b", Pair.of("b()", "emptyChunk"));
                destDepMap.put("b", Pair.of("b(int,int)", "getOrCreateChunk"));
                destDepMap.put("e", Pair.of("e(int,int)", "loadChunk"));
                destDepMap.put("g", Pair.of("g()", "world"));
                destDepMap.put("a", Pair.of("a(org.bukkit.craftbukkit.ChunkProviderServer,int,int)", "getChunkAt"));
                destDepMap.put("k", Pair.of("k()", "random"));
                destDepMap.put("b", Pair.of("b()", "setLocation"));
                destDepMap.put("aZ", Pair.of("aZ()", "velocityChanged"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setRawTypeId"));
                destDepMap.put("a", Pair.of("a()", "getItem"));
                destDepMap.put("w", Pair.of("w()", "q"));
                destDepMap.put("u", Pair.of("u()", "q"));
                destDepMap.put("l", Pair.of("l()", "k"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getBlock"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "Object"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int)", "Object"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int,int)", "setTypeAndData"));
                destDepMap.put("getTypeId", Pair.of("getTypeId(int,int,int)", "getType"));
                destDepMap.put("CraftItemStack", Pair.of("org.bukkit.craftbukkit.inventory.CraftItemStack(int,int,short,org.bukkit.inventory.meta.ItemMeta)", "CraftItemStack"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getId", Pair.of("getId()", "getItem"));
                destDepMap.put("setTypeId", Pair.of("setTypeId()", "setType"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(int,int,int,int,int)", "setTypeAndData"));
                destDepMap.put("aX", Pair.of("aX()", "bc"));
                destDepMap.put("setCompound", Pair.of("setCompound(java.lang.String,org.bukkit.craftbukkit.entity.NBTTagCompound)", "set"));
                destDepMap.put("i", Pair.of("i()", "getSections"));
                destDepMap.put("a", Pair.of("a(int,int,net.minecraft.server.WorldChunkManager)", "getBiome"));
                destDepMap.put("bb", Pair.of("bb()", "getAttributeMap"));
                destDepMap.put("b", Pair.of("b()", "getAttributes"));
                destDepMap.put("a", Pair.of("a()", "getName"));
                destDepMap.put("FIREBALL", Pair.of("FIREBALL()", "UNKNOWN"));
                destDepMap.put("add", Pair.of("add(net.minecraft.server.AxisAlignedBB)", "iterator"));
                destDepMap.put("clear", Pair.of("clear()", "iterator"));
                destDepMap.put("size", Pair.of("size()", "values"));
                destDepMap.put("setTime", Pair.of("setTime(long)", "setDayTime"));
                destDepMap.put("F", Pair.of("F()", "getDayTime"));
                destDepMap.put("a", Pair.of("a()", "c"));
                destDepMap.put("m", Pair.of("m()", "triggerHealthUpdate"));
                destDepMap.put("o", Pair.of("o()", "remove"));
                destDepMap.put("d", Pair.of("d()", "isEmpty"));
                destDepMap.put("a", Pair.of("a(float,float)", "shoot"));
                destDepMap.put("b", Pair.of("b(org.bukkit.craftbukkit.entity.Entity)", "getEntities"));
                destDepMap.put("b", Pair.of("b(double,double,double)", "grow"));
                destDepMap.put("SHRUBLAND", Pair.of("SHRUBLAND()", "RIVER"));
                destDepMap.put("ICE_DESERT", Pair.of("ICE_DESERT()", "EXTREME_HILLS"));
                destDepMap.put("TUNDRA", Pair.of("TUNDRA()", "OCEAN"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "setTypeIdAndData"));
                destDepMap.put("clear", Pair.of("clear()", "get"));
                destDepMap.put("getUUID", Pair.of("getUUID()", "getDataManager"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("QueuedPacket", Pair.of("org.bukkit.craftbukkit.ChunkCompressionThread$QueuedPacket(net.minecraft.server.EntityPlayer,net.minecraft.server.Packet,boolean)", "QueuedPacket"));
                destDepMap.put("stripColor", Pair.of("stripColor()", "b"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "d"));
                destDepMap.put("getServer", Pair.of("getServer()", "getTag"));
                destDepMap.put("getWorlds", Pair.of("getWorlds()", "getServerConfigurationManager"));
                destDepMap.put("PortalTravelAgent", Pair.of("org.bukkit.craftbukkit.PortalTravelAgent()", "Object"));
                destDepMap.put("d", Pair.of("d()", "a"));
                destDepMap.put("e", Pair.of("e()", "b"));
                destDepMap.put("setSpawnRadius", Pair.of("setSpawnRadius()", "convert"));
                destDepMap.put("UnsafeList", Pair.of("org.bukkit.craftbukkit.util.UnsafeList()", "ArrayList"));
                destDepMap.put("unsafeGet", Pair.of("unsafeGet(int)", "next"));
                destDepMap.put("setSneak", Pair.of("setSneak(boolean)", "setSneaking"));
                destDepMap.put("h", Pair.of("h()", "i"));
                destDepMap.put("a", Pair.of("a(java.lang.String)", "setResourcePack"));
                destDepMap.put("x", Pair.of("x()", "getStatisticManager"));
                destDepMap.put("bc", Pair.of("bc()", "bb"));
                destDepMap.put("setTypeId", Pair.of("setTypeId()", "setType"));
                destDepMap.put("e", Pair.of("e()", "name"));
                destDepMap.put("canSave", Pair.of("canSave()", "savingDisabled"));
                destDepMap.put("b", Pair.of("b(java.lang.String,boolean)", "setBoolean"));
                destDepMap.put("c", Pair.of("c(net.minecraft.server.EntityPlayer)", "clear"));
                destDepMap.put("b", Pair.of("b(net.minecraft.server.EntityPlayer)", "updatePlayer"));
                destDepMap.put("c", Pair.of("c()", "id"));
                destDepMap.put("a", Pair.of("a()", "count"));
                destDepMap.put("d", Pair.of("d()", "damage"));
                destDepMap.put("a", Pair.of("a(int,int,int)", "getTypeId"));
                destDepMap.put("b", Pair.of("b(int,int,int)", "getData"));
                destDepMap.put("m", Pair.of("m(int,int,int)", "getTileEntity"));
                destDepMap.put("m", Pair.of("m()", "spawnX"));
                destDepMap.put("o", Pair.of("o()", "spawnZ"));
                destDepMap.put("getPlayerManager", Pair.of("getPlayerManager()", "getPlayerChunkMap"));
                destDepMap.put("server", Pair.of("server()", "playerList"));
                destDepMap.put("aW", Pair.of("aW()", "aX"));
                destDepMap.put("toBukkitRotation", Pair.of("toBukkitRotation(int)", "asBukkitCopy"));
                destDepMap.put("asBukkitCopy", Pair.of("asBukkitCopy()", "toBukkitRotation"));
                destDepMap.put("r", Pair.of("r()", "t"));
                destDepMap.put("l", Pair.of("l()", "m"));
                destDepMap.put("d", Pair.of("d(int,int)", "c"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("player", Pair.of("player()", "profile"));
                destDepMap.put("getOwnerName", Pair.of("getOwnerName()", "getOwnerUUID"));
                destDepMap.put("setOwnerName", Pair.of("setOwnerName(java.lang.String)", "setOwnerUUID"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("name", Pair.of("name()", "profile"));
                destDepMap.put("getData", Pair.of("getData()", "getPlayer"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getPlayerExact", Pair.of("getPlayerExact(java.lang.String)", "getPlayer"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer(java.lang.String,boolean)", "fromString"));
                destDepMap.put("CraftOfflinePlayer", Pair.of("org.bukkit.craftbukkit.CraftOfflinePlayer(org.bukkit.craftbukkit.CraftServer,java.lang.String)", "Object"));
                destDepMap.put("getOwnerName", Pair.of("getOwnerName()", "getOwnerUUID"));
                destDepMap.put("setOwnerName", Pair.of("setOwnerName(java.lang.String)", "setOwnerUUID"));
                destDepMap.put("getHandle", Pair.of("getHandle()", "asNMSCopy"));
                destDepMap.put("RESET", Pair.of("RESET()", "WHITE"));
                destDepMap.put("WATER_LILY", Pair.of("WATER_LILY()", "BARRIER"));
                destDepMap.put("set", Pair.of("set(java.lang.String,java.lang.String)", "add"));
                destDepMap.put("getInt", Pair.of("getInt(java.lang.String)", "getClickedBlock"));
                destDepMap.put("set", Pair.of("set(java.lang.String,int)", "setWorldname"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.nilla.vanishnopickup.VanishNoPickupPlayerListener,com.nilla.vanishnopickup.VanishNoPickup)", "registerCommands"));
                destDepMap.put("getClass", Pair.of("getClass()", "getWorld"));
                destDepMap.put("valueOf", Pair.of("valueOf(java.lang.String)", "matchMaterial"));
                destDepMap.put("updateInventory", Pair.of("updateInventory()", "resyncInv"));
                destDepMap.put("BukkitRunnable", Pair.of("org.bukkit.scheduler.BukkitRunnable()", "DebugBukkitRunnable"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.selurgniman.bukkit.theneedfuls.parts.ohnoez.OhNoezEntityListener,org.selurgniman.bukkit.theneedfuls.TheNeedfuls)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.bukkit.event.block.BlockListener,org.selurgniman.bukkit.theneedfuls.TheNeedfuls)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.selurgniman.bukkit.theneedfuls.parts.worlds.WorldsPlayerListener,org.selurgniman.bukkit.theneedfuls.TheNeedfuls)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.selurgniman.bukkit.theneedfuls.parts.weather.WeatherBlockListener,org.selurgniman.bukkit.theneedfuls.TheNeedfuls)", "registerEvents"));
                destDepMap.put("SAND", Pair.of("SAND()", "model"));
                destDepMap.put("dispatchCommand", Pair.of("dispatchCommand(org.bukkit.command.CommandSender)", "performCommand"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "setServer"));
                destDepMap.put("getType", Pair.of("getType()", "getServer"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "trace"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getPlayerExact"));
                destDepMap.put("getScheduler", Pair.of("getScheduler()", "getPacketManager"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(de.codeinfection.quickwango.HideMe.HideMePlayerListener,de.codeinfection.quickwango.HideMe.HideMe)", "registerEvents"));
                destDepMap.put("getTo", Pair.of("getTo()", "getSign"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "getClickedBlock"));
                destDepMap.put("onPlayerInteract", Pair.of("onPlayerInteract(org.bukkit.event.player.PlayerInteractEvent)", "onSignChange"));
                destDepMap.put("getAction", Pair.of("getAction()", "getBlock"));
                destDepMap.put("getClickedBlock", Pair.of("getClickedBlock()", "getBlock"));
                destDepMap.put("getData", Pair.of("getData()", "getLine"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getStructureManager"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getStructureManager"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getSpoutLocationPopupManager"));
                destDepMap.put("getRightClicked", Pair.of("getRightClicked()", "getName"));
                destDepMap.put("getRightClicked", Pair.of("getRightClicked()", "getOldCursor"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getView"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getView"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getSlot", Pair.of("getSlot()", "getDurability"));
                destDepMap.put("getAction", Pair.of("getAction()", "isAir"));
                destDepMap.put("RIGHT_CLICK_BLOCK", Pair.of("RIGHT_CLICK_BLOCK()", "POTION"));
                destDepMap.put("getType", Pair.of("getType()", "getIngredient"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(me.crosant.timeranks.TimeRanksBlockListener,me.crosant.timeranks.TimeRanks)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(me.crosant.timeranks.TimeRanksPlayerListener,me.crosant.timeranks.TimeRanks)", "registerEvents"));
                destDepMap.put("getClass", Pair.of("getClass()", "getPlayer"));
                destDepMap.put("getName", Pair.of("getName()", "getPlayerName"));
                destDepMap.put("getName", Pair.of("getName()", "getDisplayName"));
                destDepMap.put("getBoolean", Pair.of("getBoolean(java.lang.String,boolean)", "getString"));
                destDepMap.put("unregisterAll", Pair.of("unregisterAll(me.superckl.factionalert.FactionAlert)", "clear"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getEntityId", Pair.of("getEntityId()", "addPotionEffect"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getFace", Pair.of("getFace(org.bukkit.block.BlockFace)", "getRelative"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.krsmes.bukkit.groovy.GroovyPlugin,net.krsmes.bukkit.groovy.GroovyPlugin,net.krsmes.bukkit.groovy.GroovyPlugin)", "registerEvents"));
                destDepMap.put("getList", Pair.of("getList(java.lang.String)", "getStringList"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.dumptruckman.bartersigns.listener.BarterSignsBlockListener,com.dumptruckman.bartersigns.BarterSignsPlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.dumptruckman.bartersigns.listener.BarterSignsPlayerListener,com.dumptruckman.bartersigns.BarterSignsPlugin)", "registerEvents"));
                destDepMap.put("getType", Pair.of("getType()", "getTypeId"));
                destDepMap.put("setType", Pair.of("setType()", "deleteBlocks"));
                destDepMap.put("LOWEST", Pair.of("LOWEST()", "HIGHEST"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(de.luricos.bukkit.WormholeXTreme.Worlds.events.world.WorldEventHandler,de.luricos.bukkit.WormholeXTreme.Worlds.WormholeXTremeWorlds)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(de.luricos.bukkit.WormholeXTreme.Worlds.events.entity.EntityEventHandler,de.luricos.bukkit.WormholeXTreme.Worlds.WormholeXTremeWorlds)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(de.luricos.bukkit.WormholeXTreme.Worlds.events.weather.WeatherEventHandler,de.luricos.bukkit.WormholeXTreme.Worlds.WormholeXTremeWorlds)", "registerEvents"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("SKYLANDS", Pair.of("SKYLANDS()", "THE_END"));
                destDepMap.put("getName", Pair.of("getName()", "getVersion"));
                destDepMap.put("loadConfiguration", Pair.of("loadConfiguration(java.io.File)", "getBoolean"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getFrom"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.minecarts.portalforge.listener.BlockListener,com.minecarts.portalforge.PortalForge)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.minecarts.portalforge.listener.EntityListener,com.minecarts.portalforge.PortalForge)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.minecarts.portalforge.listener.PlayerListener,com.minecarts.portalforge.PortalForge)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.minecarts.portalforge.listener.PortalListener,com.minecarts.portalforge.PortalForge)", "registerEvents"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getSlot", Pair.of("getSlot()", "getNewBookMeta"));
                destDepMap.put("getName", Pair.of("getName()", "getPlayer"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "broadcastMessage"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(bukkit.tommytony.karma.KarmaWorldListener,bukkit.tommytony.karma.Karma)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(bukkit.tommytony.karma.KarmaPlayerListener,bukkit.tommytony.karma.Karma)", "registerEvents"));
                destDepMap.put("getPlayer", Pair.of("getPlayer()", "getLocation"));
                destDepMap.put("CraftGiant", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftGiant(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGiantZombie)", "CraftGiant"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftZombie(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftWither(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftSpider(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftWitch(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftBlaze(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftEnderman(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftCreeper(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_6_R2.entity.CraftGhast(org.bukkit.craftbukkit.v1_6_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_5_R1.entity.CraftSpider(org.bukkit.craftbukkit.v1_5_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_5_R1.entity.CraftEnderman(org.bukkit.craftbukkit.v1_5_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_5_R1.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_5_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_5_R1.entity.CraftCreeper(org.bukkit.craftbukkit.v1_5_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_5_R1.entity.CraftZombie(org.bukkit.craftbukkit.v1_5_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftZombie(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftEnderman(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftWither(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftSpider(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftGhast(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftGiant", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftGiant(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGiantZombie)", "CraftGiant"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftBlaze(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftCreeper(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_7_R1.entity.CraftWitch(org.bukkit.craftbukkit.v1_7_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftCreeper(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftSpider(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftEnderman(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftZombie(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftWither(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftGhast(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftWitch(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftBlaze(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftGiant", Pair.of("org.bukkit.craftbukkit.v1_7_R2.entity.CraftGiant(org.bukkit.craftbukkit.v1_7_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGiantZombie)", "CraftGiant"));
                destDepMap.put("spawnEntity", Pair.of("spawnEntity(org.bukkit.entity.EntityType)", "spawn"));
                destDepMap.put("NORMAL", Pair.of("NORMAL()", "MONITOR"));
                destDepMap.put("setHealth", Pair.of("setHealth(int)", "resetMaxHealth"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_4_6.entity.CraftEnderman(org.bukkit.craftbukkit.v1_4_6.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_4_6.entity.CraftCreeper(org.bukkit.craftbukkit.v1_4_6.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_4_6.entity.CraftZombie(org.bukkit.craftbukkit.v1_4_6.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntityZombie)", "CraftZombie"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_4_6.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_4_6.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_4_6.entity.CraftSpider(org.bukkit.craftbukkit.v1_4_6.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntitySpider)", "CraftSpider"));
                destDepMap.put("NORMAL", Pair.of("NORMAL()", "MONITOR"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "getConfig"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftWither(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftZombie(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftGhast(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftWitch(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftSpider(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftBlaze(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftCreeper(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_6_R1.entity.CraftEnderman(org.bukkit.craftbukkit.v1_6_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftZombie(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftWither(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftEnderman(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftCreeper(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftGhast(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftBlaze(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftGiant", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftGiant(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGiantZombie)", "CraftGiant"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftWitch(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftSpider(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_6_R3.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_6_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_4_5.entity.CraftSpider(org.bukkit.craftbukkit.v1_4_5.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntitySpider)", "CraftSpider"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_4_5.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_4_5.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_4_5.entity.CraftCreeper(org.bukkit.craftbukkit.v1_4_5.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_4_5.entity.CraftZombie(org.bukkit.craftbukkit.v1_4_5.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntityZombie)", "CraftZombie"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_4_5.entity.CraftEnderman(org.bukkit.craftbukkit.v1_4_5.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entity.BloodMoonEntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftBlaze(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftWitch(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftSpider(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftWither(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftGiant", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftGiant(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGiantZombie)", "CraftGiant"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftCreeper(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftGhast(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftZombie(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_7_R3.entity.CraftEnderman(org.bukkit.craftbukkit.v1_7_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftEnderman(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftWitch(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftBlaze(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftZombie(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftWither(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftGhast(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftSpider(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_5_R2.entity.CraftCreeper(org.bukkit.craftbukkit.v1_5_R2.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftWitch", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftWitch(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWitch)", "CraftWitch"));
                destDepMap.put("CraftWither", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftWither(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityWither)", "CraftWither"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftZombie(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftEnderman(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftSpider(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftGhast", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftGhast(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityGhast)", "CraftGhast"));
                destDepMap.put("CraftBlaze", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftBlaze(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityBlaze)", "CraftBlaze"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftCreeper(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_5_R3.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_5_R3.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.entity.CraftSpider(org.bukkit.craftbukkit.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entities.BloodMoonEntitySpider)", "CraftSpider"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.entity.CraftEnderman(org.bukkit.craftbukkit.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entities.BloodMoonEntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.entity.CraftSkeleton(org.bukkit.craftbukkit.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entities.BloodMoonEntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.entity.CraftCreeper(org.bukkit.craftbukkit.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entities.BloodMoonEntityCreeper)", "CraftCreeper"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.entity.CraftZombie(org.bukkit.craftbukkit.CraftServer,uk.co.jacekk.bukkit.bloodmoon.entities.BloodMoonEntityZombie)", "CraftZombie"));
                destDepMap.put("CraftSpider", Pair.of("org.bukkit.craftbukkit.v1_4_R1.entity.CraftSpider(org.bukkit.craftbukkit.v1_4_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySpider)", "CraftSpider"));
                destDepMap.put("CraftZombie", Pair.of("org.bukkit.craftbukkit.v1_4_R1.entity.CraftZombie(org.bukkit.craftbukkit.v1_4_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityZombie)", "CraftZombie"));
                destDepMap.put("CraftSkeleton", Pair.of("org.bukkit.craftbukkit.v1_4_R1.entity.CraftSkeleton(org.bukkit.craftbukkit.v1_4_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntitySkeleton)", "CraftSkeleton"));
                destDepMap.put("CraftEnderman", Pair.of("org.bukkit.craftbukkit.v1_4_R1.entity.CraftEnderman(org.bukkit.craftbukkit.v1_4_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityEnderman)", "CraftEnderman"));
                destDepMap.put("CraftCreeper", Pair.of("org.bukkit.craftbukkit.v1_4_R1.entity.CraftCreeper(org.bukkit.craftbukkit.v1_4_R1.CraftServer,uk.co.jacekk.bukkit.bloodmoon.nms.EntityCreeper)", "CraftCreeper"));
                destDepMap.put("loadConfiguration", Pair.of("loadConfiguration(java.io.File)", "getBoolean"));
                destDepMap.put("setGameMode", Pair.of("setGameMode()", "getName"));
                destDepMap.put("LOWEST", Pair.of("LOWEST()", "HIGHEST"));
                destDepMap.put("getServer", Pair.of("getServer()", "getInstance"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "_"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "_"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short)", "Object"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "_"));
                destDepMap.put("runTaskLater", Pair.of("runTaskLater(fr.xephi.authme.AuthMe,fr.xephi.authme.task.TimeoutTask,int)", "scheduleSyncDelayedTask"));
                destDepMap.put("getScheduler", Pair.of("getScheduler()", "getInstance"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "getInstance"));
                destDepMap.put("runTask", Pair.of("runTask(fr.xephi.authme.AuthMe,fr.xephi.authme.task.MessageTask)", "scheduleSyncDelayedTask"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "_"));
                destDepMap.put("runTask", Pair.of("runTask(uk.org.whoami.authme.AuthMe,uk.org.whoami.authme.listener.AuthMePlayerListener.7)", "scheduleSyncDelayedTask"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "authmePermissible"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "authmePermissible"));
                destDepMap.put("MONITOR", Pair.of("MONITOR()", "LOWEST"));
                destDepMap.put("getEntity", Pair.of("getEntity()", "getTarget"));
                destDepMap.put("getOfflinePlayer", Pair.of("getOfflinePlayer(java.lang.String)", "getPlayer"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender,java.lang.String)", "sendMessage"));
                destDepMap.put("getValue", Pair.of("getValue()", "equalsIgnoreCase"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.md_5.autogroup.events.WorldListener,com.md_5.autogroup.AutoGroup)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.md_5.autogroup.events.PlayerListener,com.md_5.autogroup.AutoGroup)", "registerEvents"));
                destDepMap.put("getBlockX", Pair.of("getBlockX()", "toVector"));
                destDepMap.put("HIGHEST", Pair.of("HIGHEST()", "HIGH"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(fi.dy.esav.Minecart_speedplus.Minecart_speedplusVehicleListener,fi.dy.esav.Minecart_speedplus.Minecart_speedplus)", "registerEvents"));
                destDepMap.put("getDepend", Pair.of("getDepend()", "getDepends"));
                destDepMap.put("YELLOW", Pair.of("YELLOW()", "pluginPrefix"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "sendUsage"));
                destDepMap.put("getCommands", Pair.of("getCommands()", "getName"));
                destDepMap.put("unregisterClass", Pair.of("unregisterClass(java.lang.Class<com.sagaciouszed.bukkit.ConfigurationSerializableLocation>)", "add"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "t"));
                destDepMap.put("getLocation", Pair.of("getLocation()", "toString"));
                destDepMap.put("getRelative", Pair.of("getRelative()", "getType"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_5_R3.inventory.CraftInventory(net.syamn.utils.cb.inv.CBPlayerInventory)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_5_R3.inventory.CraftInventory(net.syamn.utils.cb.inv.CBEnderChest)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_5_R1.inventory.CraftInventory(net.syamn.utils.cb.inv.CBEnderChest)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_5_R1.inventory.CraftInventory(net.syamn.utils.cb.inv.CBPlayerInventory)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_6_R2.inventory.CraftInventory(net.syamn.utils.cb.inv.CBPlayerInventory)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_6_R2.inventory.CraftInventory(net.syamn.utils.cb.inv.CBEnderChest)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_5_R2.inventory.CraftInventory(net.syamn.utils.cb.inv.CBEnderChest)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_5_R2.inventory.CraftInventory(net.syamn.utils.cb.inv.CBPlayerInventory)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_4_R1.inventory.CraftInventory(net.syamn.utils.cb.inv.CBPlayerInventory)", "CraftInventory"));
                destDepMap.put("CraftInventory", Pair.of("org.bukkit.craftbukkit.v1_4_R1.inventory.CraftInventory(net.syamn.utils.cb.inv.CBEnderChest)", "CraftInventory"));
                destDepMap.put("resetScores", Pair.of("resetScores(org.bukkit.OfflinePlayer)", "put"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(me.escapeNT.pail.PailPlayerListener,me.escapeNT.pail.Pail)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(me.escapeNT.pail.PailServerListener,me.escapeNT.pail.Pail)", "registerEvents"));
                destDepMap.put("getBoolean", Pair.of("getBoolean(java.lang.String,boolean)", "isAutoUpdate"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "getLookAndFeel"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(Goldsack.DiscoSheep.DiscoListenerEntity,Goldsack.DiscoSheep.DiscoSheep)", "registerEvents"));
                destDepMap.put("getBlockPlaced", Pair.of("getBlockPlaced()", "getBlock"));
                destDepMap.put("addEnchantment", Pair.of("addEnchantment(int)", "add"));
                destDepMap.put("getScore", Pair.of("getScore(org.bukkit.OfflinePlayer)", "removeScore"));
                destDepMap.put("getOnlinePlayers", Pair.of("getOnlinePlayers()", "getRefreshTargets"));
                destDepMap.put("teleportTo", Pair.of("teleportTo(me.taylorkelly.mywarp.Location)", "teleport"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getFromName"));
                destDepMap.put("LOWEST", Pair.of("LOWEST()", "LOW"));
                destDepMap.put("getBlockX", Pair.of("getBlockX()", "getX"));
                destDepMap.put("getBlockY", Pair.of("getBlockY()", "getY"));
                destDepMap.put("getBlockZ", Pair.of("getBlockZ()", "getZ"));
                destDepMap.put("getExperience", Pair.of("getExperience()", "getExp"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBPlayerListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBBlockListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBEntityListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.MBCustomListener,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(in.mDev.MiracleM4n.mChatSuite.GUIEvent,in.mDev.MiracleM4n.mChatSuite.mChatSuite)", "registerEvents"));
                destDepMap.put("setPlayerListName", Pair.of("setPlayerListName(java.lang.String)", "doPlayerListStuff"));
                destDepMap.put("setPlayerListName", Pair.of("setPlayerListName()", "doPlayerListStuff"));
                destDepMap.put("getPluginManager", Pair.of("getPluginManager()", "getInstance"));
                destDepMap.put("getType", Pair.of("getType()", "getX"));
                destDepMap.put("MUSHROOM_SHORE", Pair.of("MUSHROOM_SHORE()", "MUSHROOM_ISLAND_SHORE"));
                destDepMap.put("SANDSTONE", Pair.of("SANDSTONE()", "DIRT"));
                destDepMap.put("SAND", Pair.of("SAND()", "DIRT"));
                destDepMap.put("DESERT_HILLS", Pair.of("DESERT_HILLS()", "FOREST_HILLS"));
                destDepMap.put("DESERT", Pair.of("DESERT()", "FOREST"));
                destDepMap.put("getBlockTypeId", Pair.of("getBlockTypeId(int,int)", "getBlock"));
                destDepMap.put("getBlockTypeId", Pair.of("getBlockTypeId(int,int,int)", "getBlock"));
                destDepMap.put("getNode", Pair.of("getNode()", "getConfigurationSection"));
                destDepMap.put("Configuration", Pair.of("org.bukkit.util.config.Configuration(java.io.File)", "YamlConfiguration"));
                destDepMap.put("getNode", Pair.of("getNode(java.lang.String)", "getConfigurationSection"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.lang.String)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,int)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,boolean)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,double)", "set"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.bukkit.event.player.PlayerListener,nl.blaatz0r.Trivia.Trivia)", "createAndRegisterEvents"));
                destDepMap.put("getName", Pair.of("getName()", "getPlugin"));
                destDepMap.put("getItemInHand", Pair.of("getItemInHand()", "getInventory"));
                destDepMap.put("getState", Pair.of("getState()", "getData"));
                destDepMap.put("add", Pair.of("add(org.bukkit.util.BlockVector)", "getOffset"));
                destDepMap.put("getBlockX", Pair.of("getBlockX()", "getX"));
                destDepMap.put("getBlockY", Pair.of("getBlockY()", "getY"));
                destDepMap.put("getBlockZ", Pair.of("getBlockZ()", "getZ"));
                destDepMap.put("getBlockY", Pair.of("getBlockY()", "getBlock"));
                destDepMap.put("getBlockZ", Pair.of("getBlockZ()", "getBlock"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String)", "getStringList"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getBlockTypeIdAt", Pair.of("getBlockTypeIdAt(int,int,int)", "getBlockType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("IRON_DOOR", Pair.of("IRON_DOOR()", "IRON_DOOR_BLOCK"));
                destDepMap.put("WOOD_DOOR", Pair.of("WOOD_DOOR()", "WOODEN_DOOR"));
                destDepMap.put("getBlock", Pair.of("getBlock()", "getRelativeTopFallables"));
                destDepMap.put("SIGN", Pair.of("SIGN()", "VINE"));
                destDepMap.put("getServer", Pair.of("getServer()", "get"));
                destDepMap.put("DARK_RED", Pair.of("DARK_RED()", "ADMIN_PERMISSION"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.minecarts.familyjewels.listener.PlayerListener,com.minecarts.familyjewels.FamilyJewels)", "registerEvents"));
                destDepMap.put("getEntity", Pair.of("getEntity()", "getPlayer"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(couk.Adamki11s.Warzone.WarzoneCreatureSpawnEvent,couk.Adamki11s.Warzone.Warzone)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(couk.Adamki11s.Warzone.WarzoneEntityListener,couk.Adamki11s.Warzone.Warzone)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(couk.Adamki11s.Warzone.WarzonePlayerListener,couk.Adamki11s.Warzone.Warzone)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(couk.Adamki11s.Warzone.WarzoneBlockListener,couk.Adamki11s.Warzone.Warzone)", "registerEvents"));
                destDepMap.put("GsonBuilder", Pair.of("org.bukkit.craftbukkit.libs.com.google.gson.GsonBuilder()", "GsonBuilder"));
                destDepMap.put("SKULL", Pair.of("SKULL()", "SKULL_ITEM"));
                destDepMap.put("getName", Pair.of("getName()", "getSavePath"));
                destDepMap.put("getPlayerExact", Pair.of("getPlayerExact(java.lang.String)", "getPlayer"));
                destDepMap.put("teleportTo", Pair.of("teleportTo(org.bukkit.Location)", "teleport"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.dinnerbone.bukkit.sample.SamplePlayerListener,com.dinnerbone.bukkit.sample.SamplePlugin)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.Balor.Listeners.PluginListener,com.Balor.bukkit.GiftPost.GiftPost)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.Balor.Listeners.SignListener,com.Balor.bukkit.GiftPost.GiftPost)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.Balor.Listeners.WorldGPListener,com.Balor.bukkit.GiftPost.GiftPost)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.Balor.Listeners.DeathEntityListener,com.Balor.bukkit.GiftPost.GiftPost)", "registerEvents"));
                destDepMap.put("getValues", Pair.of("getValues(boolean)", "createSection"));
                destDepMap.put("setItemInHand", Pair.of("setItemInHand()", "setItemInMainHand"));
                destDepMap.put("setItemInHand", Pair.of("setItemInHand(org.bukkit.inventory.ItemStack)", "setItemInMainHand"));
                destDepMap.put("SHEARS", Pair.of("SHEARS()", "IRON_SPADE"));
                destDepMap.put("PAPER", Pair.of("PAPER()", "LEATHER_BOOTS"));
                destDepMap.put("setItemInMainHand", Pair.of("setItemInMainHand(org.bukkit.inventory.ItemStack)", "getInventory"));
                destDepMap.put("getInventory", Pair.of("getInventory()", "getName"));
                destDepMap.put("getMessage", Pair.of("getMessage()", "getActor"));
                destDepMap.put("FIRE", Pair.of("FIRE()", "WOOL"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("loadConfiguration", Pair.of("loadConfiguration(java.io.File)", "getMaterial"));
                destDepMap.put("DARK_RED", Pair.of("DARK_RED()", "DARK_GREEN"));
                destDepMap.put("isSitting", Pair.of("isSitting()", "isTame"));
                destDepMap.put("getFace", Pair.of("getFace()", "getRelative"));
                destDepMap.put("getTarget", Pair.of("getTarget()", "isSitting"));
                destDepMap.put("HIGHEST", Pair.of("HIGHEST()", "MONITOR"));
                destDepMap.put("getYaw", Pair.of("getYaw()", "getType"));
                destDepMap.put("Material", Pair.of("org.bukkit.Material(int)", "Material"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender)", "sendMessage"));
                destDepMap.put("broadcastCommandMessage", Pair.of("broadcastCommandMessage(org.bukkit.command.CommandSender,java.lang.String)", "sendMessage"));
                destDepMap.put("getValue", Pair.of("getValue()", "equalsIgnoreCase"));
                destDepMap.put("Statistic", Pair.of("org.bukkit.Statistic(int,boolean)", "Statistic"));
                destDepMap.put("LOCKED_CHEST", Pair.of("LOCKED_CHEST()", "LOG_2"));
                destDepMap.put("CARPET", Pair.of("CARPET()", "ACACIA_STAIRS"));
                destDepMap.put("COAL_BLOCK", Pair.of("COAL_BLOCK()", "PACKED_ICE"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("hasPermission", Pair.of("hasPermission(java.lang.String)", "equalsIgnoreCase"));
                destDepMap.put("getName", Pair.of("getName()", "getServer"));
                destDepMap.put("registerClass", Pair.of("registerClass(java.lang.Class<net.licks92.WirelessRedstone.Channel.WirelessScreen>,java.lang.String)", "close"));
                destDepMap.put("set", Pair.of("set(java.lang.String,java.lang.Object)", "updateChannel"));
                destDepMap.put("get", Pair.of("get(java.lang.String)", "getAllChannels"));
                destDepMap.put("setTypeIdAndData", Pair.of("setTypeIdAndData(byte,boolean)", "setType"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(fi.dy.esav.Minecart_speedplus.Minecart_speedplusVehicleListener,fi.dy.esav.Minecart_speedplus.Minecart_speedplus)", "registerEvents"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "banOptions"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "GREEN"));
                destDepMap.put("YELLOW", Pair.of("YELLOW()", "RED"));
                destDepMap.put("DARK_GREEN", Pair.of("DARK_GREEN()", "GRAY"));
                destDepMap.put("getStringList", Pair.of("getStringList(java.lang.String)", "options"));
                destDepMap.put("getBoolean", Pair.of("getBoolean(java.lang.String)", "options"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "verifyClan"));
                destDepMap.put("GRAY", Pair.of("GRAY()", "RED"));
                destDepMap.put("getWorld", Pair.of("getWorld()", "getPlayer"));
                destDepMap.put("getDisplayName", Pair.of("getDisplayName()", "getName"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "execute"));
                destDepMap.put("DARK_RED", Pair.of("DARK_RED()", "length"));
                destDepMap.put("getName", Pair.of("getName()", "toPlayer"));
                destDepMap.put("sendMessage", Pair.of("sendMessage(java.lang.String)", "log"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.dyndns.pamelloes.Clog.ClogServerListener,org.dyndns.pamelloes.Clog.Clog)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(org.dyndns.pamelloes.Clog.ClogPlayerListener,org.dyndns.pamelloes.Clog.Clog)", "registerEvents"));
                destDepMap.put("SimplexNoiseGenerator", Pair.of("org.bukkit.util.noise.SimplexNoiseGenerator(java.util.Random)", "Object"));
                destDepMap.put("getX", Pair.of("getX()", "randInt"));
                destDepMap.put("getZ", Pair.of("getZ()", "randInt"));
                destDepMap.put("getBlockAt", Pair.of("getBlockAt(int,int,int)", "getHighestBlockY"));
                destDepMap.put("setType", Pair.of("setType()", "setRawTypeIdAndData"));
                destDepMap.put("getHighestBlockYAt", Pair.of("getHighestBlockYAt(int,int)", "getHighestBlockY"));
                destDepMap.put("getTypeId", Pair.of("getTypeId(int,int,int)", "getHighestBlockY"));
                destDepMap.put("setTypeId", Pair.of("setTypeId(int,int,int)", "setRawMaterial"));
                destDepMap.put("setRawTypeId", Pair.of("setRawTypeId(int,int,int)", "setRawMaterial"));
                destDepMap.put("ItemStack", Pair.of("org.bukkit.inventory.ItemStack(int,int,short,byte)", "ItemStack"));
                destDepMap.put("getByData", Pair.of("getByData(byte)", "getByDyeData"));
                destDepMap.put("getData", Pair.of("getData()", "getDyeData"));
                destDepMap.put("getWorld", Pair.of("getWorld(java.lang.String)", "getServer"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("getTypeId", Pair.of("getTypeId()", "getType"));
                destDepMap.put("class", Pair.of("class()", "tops"));
                destDepMap.put("setHealth", Pair.of("setHealth(int)", "setHealthP"));
                destDepMap.put("getName", Pair.of("getName()", "getID"));
                destDepMap.put("getOnlinePlayers", Pair.of("getOnlinePlayers()", "getPlayer"));
                destDepMap.put("getKeys", Pair.of("getKeys(boolean)", "toArenaPlayer"));
                destDepMap.put("getName", Pair.of("getName()", "getID"));
                destDepMap.put("Vector", Pair.of("org.bukkit.util.Vector(int,int,int)", "Object"));
                destDepMap.put("getPlayerExact", Pair.of("getPlayerExact(java.lang.String)", "findPlayerExact"));
                destDepMap.put("GOLD", Pair.of("GOLD()", "YELLOW"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("setData", Pair.of("setData(byte,boolean)", "setRawData"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "getConfigurationSection"));
                destDepMap.put("getString", Pair.of("getString(java.lang.String,java.lang.String)", "getConfigurationSection"));
                destDepMap.put("HIGHEST", Pair.of("HIGHEST()", "MONITOR"));
                destDepMap.put("Permission", Pair.of("org.bukkit.permissions.Permission(java.lang.String,java.lang.String)", "Object"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "put"));
                destDepMap.put("sendMessage", Pair.of("sendMessage()", "send"));
                destDepMap.put("getName", Pair.of("getName()", "getParticipant"));
                destDepMap.put("getPermission", Pair.of("getPermission()", "getServer"));
                destDepMap.put("getLogger", Pair.of("getLogger()", "getServer"));
                destDepMap.put("getName", Pair.of("getName()", "getUniqueId"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.pneumaticraft.blockloot.listeners.BLBlockListener,com.pneumaticraft.blockloot.BlockLoot)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(com.pneumaticraft.blockloot.listeners.BLEntityListener,com.pneumaticraft.blockloot.BlockLoot)", "registerEvents"));
                destDepMap.put("getList", Pair.of("getList(java.lang.String)", "getMapList"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.util.List<java.util.Map<java.lang.String, java.lang.Object>>)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.lang.Object)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.lang.String)", "set"));
                destDepMap.put("Configuration", Pair.of("org.bukkit.util.config.Configuration(java.io.File)", "YamlConfiguration"));
                destDepMap.put("getNodeList", Pair.of("getNodeList(java.lang.String,null)", "getSectionList"));
                destDepMap.put("getProperty", Pair.of("getProperty(java.lang.String)", "getDouble"));
                destDepMap.put("getNodeList", Pair.of("getNodeList(java.lang.String,null)", "getSectionList"));
                destDepMap.put("Configuration", Pair.of("org.bukkit.util.config.Configuration(java.io.File)", "YamlConfiguration"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,java.lang.String)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,boolean)", "set"));
                destDepMap.put("setProperty", Pair.of("setProperty(java.lang.String,com.google.common.collect.ImmutableList<java.lang.String>)", "set"));
                destDepMap.put("getPlugin", Pair.of("getPlugin(java.lang.String)", "getPlugins"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.robinjam.bukkit.eternalwolf.EntityListener,net.robinjam.bukkit.eternalwolf.EternalWolf)", "registerEvents"));
                destDepMap.put("registerEvent", Pair.of("registerEvent(net.robinjam.bukkit.eternalwolf.PlayerListener,net.robinjam.bukkit.eternalwolf.EternalWolf)", "registerEvents"));
                destDepMap.put("getPlayer", Pair.of("getPlayer(java.lang.String)", "getKnown"));
                destDepMap.put("getName", Pair.of("getName()", "loadAchievements"));
                break;
            case "Lucene":
                destDepMap.put("LUCENE_50", Pair.of("LUCENE_50()", "LUCENE_42"));
                destDepMap.put("LUCENE_46", Pair.of("LUCENE_46()", "LUCENE_47"));
                destDepMap.put("normValues", Pair.of("normValues()", "getNormValues"));
                destDepMap.put("normValues", Pair.of("normValues(java.lang.String)", "getNormValues"));
                destDepMap.put("LUCENE_47", Pair.of("LUCENE_47()", "LUCENE_48"));
                destDepMap.put("LUCENE_4_9", Pair.of("LUCENE_4_9()", "LATEST"));
                destDepMap.put("name", Pair.of("name()", "toString"));
                destDepMap.put("LUCENE_48", Pair.of("LUCENE_48()", "LUCENE_4_9"));
                destDepMap.put("FindSegmentsFile", Pair.of("org.apache.lucene.index.SegmentInfos$FindSegmentsFile()", "FindSegmentsFile"));
                destDepMap.put("SegmentInfos", Pair.of("org.apache.lucene.index.SegmentInfos()", "SegmentInfos"));
                destDepMap.put("LUCENE_43", Pair.of("LUCENE_43()", "LUCENE_46"));
                destDepMap.put("IntsRef", Pair.of("org.apache.lucene.util.IntsRef(int)", "IntsRefBuilder"));
                destDepMap.put("UTF8toUTF32", Pair.of("UTF8toUTF32(org.apache.lucene.util.BytesRef,org.apache.lucene.util.IntsRef)", "copyUTF8Bytes"));
                destDepMap.put("OutputStreamDataOutput", Pair.of("org.apache.lucene.analysis.de.compounds.OutputStreamDataOutput(java.io.FileOutputStream)", "OutputStreamDataOutput"));
                destDepMap.put("addDetail", Pair.of("addDetail(org.apache.lucene.search.Explanation)", "add"));
                destDepMap.put("setValue", Pair.of("setValue()", "add"));
                destDepMap.put("Explanation", Pair.of("org.apache.lucene.search.Explanation()", "ArrayList"));
                destDepMap.put("Explanation", Pair.of("org.apache.lucene.search.Explanation(float,java.lang.String)", "ArrayList"));
                destDepMap.put("SCORE_CORRECT", Pair.of("SCORE_CORRECT()", "SCORE_COMPOUNDS"));
                destDepMap.put("LUCENE_CURRENT", Pair.of("LUCENE_CURRENT()", "LUCENE_42"));
                destDepMap.put("BooleanQuery", Pair.of("org.apache.lucene.search.BooleanQuery()", "BooleanQuery"));
                destDepMap.put("TermQuery", Pair.of("org.apache.lucene.search.TermQuery(org.apache.lucene.index.Term)", "TermQuery"));
                destDepMap.put("length", Pair.of("length()", "min"));
                destDepMap.put("getDirectory", Pair.of("getDirectory(java.io.File)", "open"));
                destDepMap.put("getDirectory", Pair.of("getDirectory(java.lang.String)", "open"));
                destDepMap.put("LUCENE_47", Pair.of("LUCENE_47()", "LUCENE_48"));
                destDepMap.put("getInt", Pair.of("getInt(int)", "get"));
                destDepMap.put("LUCENE_41", Pair.of("LUCENE_41()", "LUCENE_43"));
                destDepMap.put("DocIdSet", Pair.of("org.apache.lucene.search.DocIdSet()", "MatchSomeDocsQuery"));
                destDepMap.put("docsAndPositions", Pair.of("docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum)", "postings"));
                destDepMap.put("docs", Pair.of("docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum)", "postings"));
                destDepMap.put("LUCENE_40", Pair.of("LUCENE_40()", "LUCENE_43"));
                destDepMap.put("optimize", Pair.of("optimize()", "commit"));
                destDepMap.put("TermsFilter", Pair.of("org.apache.lucene.search.TermsFilter()", "ArrayList"));
                destDepMap.put("addTerm", Pair.of("addTerm(org.apache.lucene.index.Term)", "add"));
                destDepMap.put("LUCENE_36", Pair.of("LUCENE_36()", "LUCENE_42"));
                destDepMap.put("LUCENE_42", Pair.of("LUCENE_42()", "LUCENE_43"));
                destDepMap.put("flush", Pair.of("flush()", "commit"));
                destDepMap.put("getDirectory", Pair.of("getDirectory()", "open"));
                destDepMap.put("commit", Pair.of("commit()", "flush"));
                destDepMap.put("SetBasedFieldSelector", Pair.of("org.apache.lucene.document.SetBasedFieldSelector(java.lang.Object,java.lang.Object)", "SetBasedFieldSelector"));
                destDepMap.put("terms", Pair.of("terms(org.apache.lucene.index.Term)", "getTerms"));
                destDepMap.put("term", Pair.of("term()", "iterator"));
                destDepMap.put("termDocs", Pair.of("termDocs(org.apache.lucene.index.Term)", "getTermDocsEnum"));
                destDepMap.put("text", Pair.of("text()", "utf8ToString"));
                destDepMap.put("doc", Pair.of("doc()", "docID"));
                destDepMap.put("LUCENE_31", Pair.of("LUCENE_31()", "LUCENE_41"));
                destDepMap.put("LUCENE_36", Pair.of("LUCENE_36()", "LUCENE_41"));
                destDepMap.put("reusableTokenStream", Pair.of("reusableTokenStream(java.io.StringReader)", "tokenStream"));
                destDepMap.put("getTermFreqVector", Pair.of("getTermFreqVector(int,java.lang.String)", "getTermVector"));
                destDepMap.put("reusableTokenStream", Pair.of("reusableTokenStream(org.apache.mahout.vectorizer.encoders.LuceneTextValueEncoder.CharSequenceReader)", "tokenStream"));
                destDepMap.put("LUCENE_34", Pair.of("LUCENE_34()", "LUCENE_41"));
                destDepMap.put("reusableTokenStream", Pair.of("reusableTokenStream(java.lang.String,java.io.StringReader)", "tokenStream"));
                destDepMap.put("reusableTokenStream", Pair.of("reusableTokenStream(java.lang.String,java.io.Reader)", "tokenStream"));
                destDepMap.put("DefaultSimilarity", Pair.of("org.apache.lucene.search.DefaultSimilarity()", "DefaultSimilarity"));
                destDepMap.put("Lock", Pair.of("org.apache.lucene.store.Lock()", "Lock"));
                destDepMap.put("LUCENE_45", Pair.of("LUCENE_45()", "LUCENE_46"));
                destDepMap.put("WikipediaTokenizer", Pair.of("org.apache.lucene.wikipedia.analysis.WikipediaTokenizer(java.io.Reader)", "WikipediaTokenizer"));
                destDepMap.put("term", Pair.of("term()", "toString"));
                destDepMap.put("LUCENE_CURRENT", Pair.of("LUCENE_CURRENT()", "LUCENE_31"));
                destDepMap.put("termLength", Pair.of("termLength()", "length"));
                destDepMap.put("termBuffer", Pair.of("termBuffer()", "buffer"));
                destDepMap.put("setTermBuffer", Pair.of("setTermBuffer(java.lang.String)", "setEmpty"));
                destDepMap.put("LUCENE_41", Pair.of("LUCENE_41()", "LUCENE_42"));
                destDepMap.put("LUCENE_36", Pair.of("LUCENE_36()", "LUCENE_46"));
                destDepMap.put("ParseException", Pair.of("org.apache.lucene.queryParser.ParseException(java.lang.String)", "ParseException"));
                destDepMap.put("LUCENE_24", Pair.of("LUCENE_24()", "LUCENE_46"));
                destDepMap.put("LUCENE_30", Pair.of("LUCENE_30()", "LUCENE_46"));
                destDepMap.put("CharTokenizer", Pair.of("org.apache.lucene.analysis.CharTokenizer(java.io.Reader)", "CharTokenizer"));
                destDepMap.put("getAttribute", Pair.of("getAttribute(java.lang.Class<org.apache.lucene.analysis.tokenattributes.TermAttribute>)", "addAttribute"));
                destDepMap.put("term", Pair.of("term()", "toString"));
                destDepMap.put("optimize", Pair.of("optimize()", "forceMerge"));
                destDepMap.put("addDocument", Pair.of("addDocument()", "add"));
                destDepMap.put("open", Pair.of("open(java.io.File)", "toPath"));
                destDepMap.put("forceMerge", Pair.of("forceMerge(int)", "replace"));
                destDepMap.put("unlock", Pair.of("unlock(org.apache.lucene.store.Directory)", "unlockForcibly"));
                destDepMap.put("commit", Pair.of("commit()", "setRootGroups"));
                destDepMap.put("deleteAll", Pair.of("deleteAll()", "deleteDocuments"));
                destDepMap.put("BrazilianAnalyzer", Pair.of("org.apache.lucene.analysis.br.BrazilianAnalyzer()", "BrazilianAnalyzer"));
                destDepMap.put("CJKAnalyzer", Pair.of("org.apache.lucene.analysis.cjk.CJKAnalyzer()", "CJKAnalyzer"));
                destDepMap.put("CzechAnalyzer", Pair.of("org.apache.lucene.analysis.cz.CzechAnalyzer()", "CzechAnalyzer"));
                destDepMap.put("DutchAnalyzer", Pair.of("org.apache.lucene.analysis.nl.DutchAnalyzer()", "DutchAnalyzer"));
                destDepMap.put("FrenchAnalyzer", Pair.of("org.apache.lucene.analysis.fr.FrenchAnalyzer()", "FrenchAnalyzer"));
                destDepMap.put("GermanAnalyzer", Pair.of("org.apache.lucene.analysis.de.GermanAnalyzer()", "GermanAnalyzer"));
                destDepMap.put("RussianAnalyzer", Pair.of("org.apache.lucene.analysis.ru.RussianAnalyzer()", "RussianAnalyzer"));
                destDepMap.put("ThaiAnalyzer", Pair.of("org.apache.lucene.analysis.th.ThaiAnalyzer()", "ThaiAnalyzer"));
                destDepMap.put("LUCENE_CURRENT", Pair.of("LUCENE_CURRENT()", "VERSION"));
                destDepMap.put("StandardAnalyzer", Pair.of("org.apache.lucene.analysis.standard.StandardAnalyzer()", "StandardAnalyzer"));
                destDepMap.put("ReusableAnalyzerBase", Pair.of("org.apache.lucene.analysis.ReusableAnalyzerBase()", "Analyzer"));
                destDepMap.put("KeywordTokenizer", Pair.of("org.apache.lucene.analysis.KeywordTokenizer(java.io.Reader)", "KeywordTokenizer"));
                destDepMap.put("LevensteinDistance", Pair.of("org.apache.lucene.search.spell.LevensteinDistance()", "LevensteinDistance"));
                destDepMap.put("NGramDistance", Pair.of("org.apache.lucene.search.spell.NGramDistance(int)", "NGramDistance"));
                destDepMap.put("JaroWinklerDistance", Pair.of("org.apache.lucene.search.spell.JaroWinklerDistance()", "JaroWinklerDistance"));
                destDepMap.put("LuceneLevenshteinDistance", Pair.of("org.apache.lucene.search.spell.LuceneLevenshteinDistance()", "LuceneLevenshteinDistance"));
                destDepMap.put("NGramDistance", Pair.of("org.apache.lucene.search.spell.NGramDistance()", "NGramDistance"));
                destDepMap.put("flush", Pair.of("flush()", "commit"));
                destDepMap.put("LUCENE_45", Pair.of("LUCENE_45()", "LUCENE_4_9"));
                destDepMap.put("LUCENE_43", Pair.of("LUCENE_43()", "LUCENE_45"));
                destDepMap.put("LUCENE_30", Pair.of("LUCENE_30()", "LUCENE_VERSION"));
                destDepMap.put("KeywordAnalyzer", Pair.of("org.apache.lucene.analysis.KeywordAnalyzer()", "KeywordAnalyzer"));
                destDepMap.put("setIndexed", Pair.of("setIndexed(boolean)", "setIndexOptions"));
                destDepMap.put("Term", Pair.of("org.apache.lucene.index.Term(java.lang.String,java.lang.String)", "Term"));
                destDepMap.put("TOKEN_SEPARATOR", Pair.of("TOKEN_SEPARATOR()", "DEFAULT_TOKEN_SEPARATOR"));
                destDepMap.put("LUCENE_35", Pair.of("LUCENE_35()", "LUCENE_40"));
                destDepMap.put("KeywordAnalyzer", Pair.of("org.apache.lucene.analysis.KeywordAnalyzer()", "KeywordAnalyzer"));
                destDepMap.put("LUCENE_30", Pair.of("LUCENE_30()", "LUCENE_VERSION"));
                destDepMap.put("LUCENE_31", Pair.of("LUCENE_31()", "LUCENE_VERSION"));
                destDepMap.put("LUCENE_40", Pair.of("LUCENE_40()", "LUCENE_46"));
                destDepMap.put("LUCENE_40", Pair.of("LUCENE_40()", "LUCENE_43"));
                destDepMap.put("DocumentStoredFieldVisitor", Pair.of("org.apache.lucene.document.DocumentStoredFieldVisitor(java.util.Set<java.lang.String>)", "JustUidFieldsVisitor"));
                destDepMap.put("getDocument", Pair.of("getDocument()", "uid"));
                destDepMap.put("LUCENE_41", Pair.of("LUCENE_41()", "LUCENE_42"));
                destDepMap.put("LUCENE_42", Pair.of("LUCENE_42()", "LUCENE_43"));
                destDepMap.put("getDefault", Pair.of("getDefault()", "getDefaultSimilarity"));
                destDepMap.put("addAnalyzer", Pair.of("addAnalyzer(java.lang.String,org.apache.lucene.analysis.Analyzer)", "put"));
                destDepMap.put("addAnalyzer", Pair.of("addAnalyzer(java.lang.String,com.gentics.cr.lucene.analysis.ReverseAnalyzer)", "put"));
                destDepMap.put("getWordsIterator", Pair.of("getWordsIterator()", "getEntryIterator"));
                destDepMap.put("getMergedFieldInfos", Pair.of("getMergedFieldInfos(org.apache.lucene.index.IndexReader)", "getFieldInfos"));
                destDepMap.put("LUCENE_35", Pair.of("LUCENE_35()", "LUCENE_4_9"));
                destDepMap.put("document", Pair.of("document()", "search"));
                destDepMap.put("term", Pair.of("term()", "buffer"));
                destDepMap.put("deleteDocument", Pair.of("deleteDocument(java.lang.Integer)", "deleteDocuments"));
                destDepMap.put("reopen", Pair.of("reopen()", "openIfChanged"));
                destDepMap.put("getBinaryValue", Pair.of("getBinaryValue()", "binaryValue"));
                destDepMap.put("getWordsIterator", Pair.of("getWordsIterator()", "getEntryIterator"));
                destDepMap.put("getFieldable", Pair.of("getFieldable(java.lang.String)", "getField"));
                destDepMap.put("refresh", Pair.of("refresh()", "openIfChanged"));
                destDepMap.put("KeywordAnalyzer", Pair.of("org.apache.lucene.analysis.KeywordAnalyzer()", "KeywordAnalyzer"));
                destDepMap.put("LUCENE_30", Pair.of("LUCENE_30()", "LUCENE_6_1_0"));
                destDepMap.put("open", Pair.of("open(java.io.File)", "getDirectory"));
                destDepMap.put("getDirectory", Pair.of("getDirectory(java.lang.String,boolean)", "open"));
                destDepMap.put("reset", Pair.of("reset(java.io.StringReader)", "setReader"));
                destDepMap.put("StoredField", Pair.of("org.apache.lucene.document.StoredField(java.lang.String,java.lang.String)", "StringField"));
                destDepMap.put("LUCENE_40", Pair.of("LUCENE_40()", "LUCENE_41"));
                destDepMap.put("SortedVIntList", Pair.of("org.apache.lucene.util.SortedVIntList(int[])", "OpenBitSet"));
                destDepMap.put("QueryParser", Pair.of("org.apache.lucene.queryParser.QueryParser(java.lang.String,org.apache.lucene.analysis.standard.StandardAnalyzer)", "QueryParser"));
                destDepMap.put("LUCENE_41", Pair.of("LUCENE_41()", "LUCENE_42"));
                destDepMap.put("Term", Pair.of("org.apache.lucene.index.Term(java.lang.String)", "Term"));
                destDepMap.put("LUCENE_35", Pair.of("LUCENE_35()", "LUCENE_36"));
                destDepMap.put("Lucene40PostingsFormat", Pair.of("org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat(int,int)", "Lucene41PostingsFormat"));
                destDepMap.put("Pulsing40PostingsFormat", Pair.of("org.apache.lucene.codecs.pulsing.Pulsing40PostingsFormat()", "Pulsing41PostingsFormat"));
                destDepMap.put("Lucene40PostingsFormat", Pair.of("org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat()", "Lucene41PostingsFormat"));
                destDepMap.put("Pulsing40PostingsFormat", Pair.of("org.apache.lucene.codecs.pulsing.Pulsing40PostingsFormat(int,int,int)", "Pulsing41PostingsFormat"));
                destDepMap.put("CustomMemoryIndex", Pair.of("org.apache.lucene.index.memory.CustomMemoryIndex()", "MemoryIndex"));
                destDepMap.put("LUCENE_44", Pair.of("LUCENE_44()", "LUCENE_46"));
                destDepMap.put("LUCENE_46", Pair.of("LUCENE_46()", "LUCENE_48"));
                destDepMap.put("LUCENE_46", Pair.of("LUCENE_46()", "LUCENE_48"));
                destDepMap.put("StandardAnalyzer", Pair.of("org.apache.lucene.analysis.standard.StandardAnalyzer()", "BrazilianAnalyzer"));
                destDepMap.put("LUCENE_48", Pair.of("LUCENE_48()", "LUCENE_4_10_3"));
                destDepMap.put("XSimpleRateLimiter", Pair.of("org.apache.lucene.store.XSimpleRateLimiter(int)", "SimpleRateLimiter"));
                destDepMap.put("LUCENE_41", Pair.of("LUCENE_41()", "LUCENE_42"));
                destDepMap.put("LUCENE_35", Pair.of("LUCENE_35()", "LUCENE_36"));
                destDepMap.put("Term", Pair.of("org.apache.lucene.index.Term(java.lang.String)", "Term"));
                destDepMap.put("Lucene40PostingsFormat", Pair.of("org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat(int,int)", "Lucene41PostingsFormat"));
                destDepMap.put("Pulsing40PostingsFormat", Pair.of("org.apache.lucene.codecs.pulsing.Pulsing40PostingsFormat(int,int,int)", "Pulsing41PostingsFormat"));
                destDepMap.put("CustomMemoryIndex", Pair.of("org.apache.lucene.index.memory.CustomMemoryIndex()", "MemoryIndex"));
                destDepMap.put("Pulsing40PostingsFormat", Pair.of("org.apache.lucene.codecs.pulsing.Pulsing40PostingsFormat()", "Pulsing41PostingsFormat"));
                destDepMap.put("Lucene40PostingsFormat", Pair.of("org.apache.lucene.codecs.lucene40.Lucene40PostingsFormat()", "Lucene41PostingsFormat"));
                destDepMap.put("LUCENE_42", Pair.of("LUCENE_42()", "LUCENE_43"));
                destDepMap.put("getWorldNode", Pair.of("getWorldNode()", "getWorldCell"));
                destDepMap.put("getWorldNode", Pair.of("getWorldNode()", "getWorldCell"));
                destDepMap.put("FrenchStemFilter", Pair.of("org.apache.lucene.analysis.fr.FrenchStemFilter(org.apache.lucene.analysis.miscellaneous.KeywordMarkerFilter)", "FrenchStemFilter"));
                destDepMap.put("BrazilianStemFilter", Pair.of("org.apache.lucene.analysis.br.BrazilianStemFilter(org.apache.lucene.analysis.miscellaneous.KeywordMarkerFilter)", "BrazilianStemFilter"));
                destDepMap.put("Builder", Pair.of("org.apache.lucene.analysis.miscellaneous.XStemmerOverrideFilter$Builder()", "Builder"));
                destDepMap.put("GermanStemFilter", Pair.of("org.apache.lucene.analysis.de.GermanStemFilter(org.apache.lucene.analysis.miscellaneous.KeywordMarkerFilter)", "GermanStemFilter"));
                destDepMap.put("DutchStemFilter", Pair.of("org.apache.lucene.analysis.nl.DutchStemFilter(org.apache.lucene.analysis.miscellaneous.KeywordMarkerFilter)", "DutchStemFilter"));
                destDepMap.put("LUCENE_36", Pair.of("LUCENE_36()", "LUCENE_43"));
                destDepMap.put("save", Pair.of("save(org.apache.lucene.store.DataOutput)", "size"));
                destDepMap.put("ramBytesUsed", Pair.of("ramBytesUsed()", "getBitsPerValue"));
                destDepMap.put("getReaderIterator", Pair.of("getReaderIterator(org.apache.lucene.store.DataInput)", "get"));
                destDepMap.put("ReaderIterator", Pair.of("org.apache.lucene.util.packed.PackedInts.ReaderIterator()", "LongRandomAccessIterator"));
                destDepMap.put("CompressedIdSet", Pair.of("org.apache.lucene.util.packed.CompressedIdSet(int)", "CompressedIdSet"));
                destDepMap.put("getClauses", Pair.of("getClauses()", "clauses"));
                destDepMap.put("setTermBuffer", Pair.of("setTermBuffer(java.lang.String)", "append"));
                destDepMap.put("termBuffer", Pair.of("termBuffer()", "needsTransliterating"));
                destDepMap.put("termLength", Pair.of("termLength()", "transliterate"));
                destDepMap.put("setTermBuffer", Pair.of("setTermBuffer(java.lang.String)", "append"));
                destDepMap.put("clone", Pair.of("clone()", "transliterate"));
                destDepMap.put("setStartOffset", Pair.of("setStartOffset(int)", "assertAttributes"));
                destDepMap.put("setPositionIncrement", Pair.of("setPositionIncrement(int)", "assertAttributes"));
                destDepMap.put("next", Pair.of("next(org.apache.lucene.analysis.Token)", "incrementToken"));
                destDepMap.put("setTermBuffer", Pair.of("setTermBuffer()", "append"));
                destDepMap.put("setTermLength", Pair.of("setTermLength()", "setLength"));
                destDepMap.put("term", Pair.of("term()", "buffer"));
                destDepMap.put("Builder", Pair.of("org.apache.lucene.search.BooleanQuery$Builder()", "Builder"));
                destDepMap.put("MatchAllDocsQuery", Pair.of("org.apache.lucene.search.MatchAllDocsQuery()", "MatchAllDocsQuery"));
                destDepMap.put("BytesRef", Pair.of("org.apache.lucene.util.BytesRef()", "BytesRefBuilder"));
                destDepMap.put("LUCENE_50", Pair.of("LUCENE_50()", "LUCENE_5_0"));
                destDepMap.put("Collector", Pair.of("org.apache.lucene.search.Collector()", "SimpleCollector"));
                destDepMap.put("DefaultSimilarity", Pair.of("org.apache.lucene.search.similarities.DefaultSimilarity()", "ClassicSimilarity"));
                destDepMap.put("BytesRef", Pair.of("org.apache.lucene.util.BytesRef(byte[])", "BytesRef"));
                destDepMap.put("NumericTokenStream", Pair.of("org.apache.lucene.analysis.NumericTokenStream(int)", "LegacyNumericTokenStream"));
                destDepMap.put("BytesRefBuilder", Pair.of("org.apache.lucene.util.BytesRefBuilder()", "BytesRefBuilder"));
                destDepMap.put("MMapDirectory", Pair.of("org.apache.lucene.store.MMapDirectory(java.io.File)", "MMapDirectory"));
                destDepMap.put("clone", Pair.of("clone()", "deepCopyOf"));
                destDepMap.put("BytesRef", Pair.of("org.apache.lucene.util.BytesRef()", "BytesRefBuilder"));
                destDepMap.put("getTermData", Pair.of("getTermData()", "rewrite"));
                destDepMap.put("TYPE_STORED", Pair.of("TYPE_STORED()", "YES"));
                destDepMap.put("LUCENE_40", Pair.of("LUCENE_40()", "LUCENE_36"));
                destDepMap.put("KeywordTokenizer", Pair.of("org.apache.lucene.analysis.core.KeywordTokenizer(java.io.Reader)", "KeywordTokenizer"));
                destDepMap.put("TYPE_STORED", Pair.of("TYPE_STORED()", "ANALYZED"));
                destDepMap.put("TYPE_NOT_STORED", Pair.of("TYPE_NOT_STORED()", "ANALYZED"));
                destDepMap.put("StandardQueryParser", Pair.of("org.apache.lucene.queryparser.flexible.standard.StandardQueryParser(org.apache.lucene.analysis.core.SimpleAnalyzer)", "QueryParser"));
                destDepMap.put("StandardQueryParser", Pair.of("org.apache.lucene.queryparser.flexible.standard.StandardQueryParser(org.apache.lucene.analysis.standard.StandardAnalyzer)", "QueryParser"));
                destDepMap.put("LUCENE_36", Pair.of("LUCENE_36()", "LUCENE_40"));
                destDepMap.put("KeywordTokenizer", Pair.of("org.apache.lucene.analysis.KeywordTokenizer(java.io.Reader)", "KeywordTokenizer"));
                break;
            default:
                logger.error(String.format("Correct parameters for --benchmark: Android-SDK | CraftBukkit | Lucene. The given parameter is %s", benchmark));
                throw new IOException();
        }
    }


    @Override
    public Integer call() throws Exception {
        init();
        Files.newDirectoryStream(Path.of(updateExamplePath)).forEach(exampleDirPath -> {
            if (!exampleDirPath.toString().contains("DS_Store")){
                String[] pathStr = exampleDirPath.getFileName().toString().split("/");
                String key = pathStr[pathStr.length - 1];
                destinationAPISimpleName = destDepMap.get(key).getSecond();
                deprecatedAPIFQN = destDepMap.get(key).getFirst();
                logger.info("");
                logger.info("");
                logger.info("Deprecated-API:" + deprecatedAPIFQN);
                logger.info("Destination-API:" + destinationAPISimpleName);
                if (destinationAPISimpleName.contains("vibrate")) destinationAPISimpleName = "vibrate";
                try {
                    Files.newDirectoryStream(exampleDirPath).forEach(exampleFilePath -> {
                        if (!exampleFilePath.toString().contains("DS_Store") && !exampleFilePath.toString().contains(".cocci")) {
                            metaSmPL = null; // clear M-SmPL
                            logger.info("");
                            logger.info("Using-Example: " + exampleFilePath.toString());
                            logger.info("Loading the example...");
                            //Make build model of the example Java code for migration
                            Launcher exampleLauncher = new Launcher();
                            String[] args2 = {
                                    "-i", exampleFilePath.toString(),
                                    "-c"
                            };
                            exampleLauncher.setArgs(args2);
                            exampleLauncher.getEnvironment().setSourceClasspath(jar);
                            exampleLauncher.run();
                            logger.info("Finish loading");

                            String output = exampleFilePath.toString().substring(0, exampleFilePath.toString().length() - 5) + ".cocci";

                            AtomicReference<CtExecutableReference> destAPI = new AtomicReference<>();
                            exampleLauncher.getModel().getElements(new TypeFilter<>(CtAbstractInvocation.class))
                                    .stream().filter(inv -> (inv.getExecutable().getSimpleName().equals("<init>") ? inv.getExecutable().getType().getSimpleName().equals(destinationAPISimpleName) : inv.getExecutable().getSimpleName().equals(destinationAPISimpleName)) && inv.getParent(CtExecutable.class) != null)
                                    .peek(inv -> destAPI.set(inv.getExecutable()))
                                    .map(inv -> inv.getParent(CtExecutable.class))
                                    .findFirst().ifPresentOrElse(migrationExample -> {
                                if (destAPI.get() != null) {
                                    try {
                                        Files.newDirectoryStream(Path.of(targetDatasetPath)).forEach(targetDirPath -> {
                                            if (targetDirPath.toString().contains(deprecatedAPIFQN)) {
                                                try {
                                                    Files.newDirectoryStream(targetDirPath).forEach(targetFilePath -> {
                                                        if (!targetFilePath.toString().contains("DS_Store") && !targetDirPath.toString().contains("DS_Store") && !targetDirPath.toString().contains(".cocci")) {
                                                            try {
                                                                trial(targetFilePath, migrationExample, destAPI.get());
                                                            } catch (Exception e) {
                                                                e.printStackTrace();
                                                                if (metaSmPL == null) {
                                                                    logger.error("Failed to generate mSmPL file");
                                                                } else {
                                                                    logger.error("Failed to applying mSmPL file");
                                                                    logger.error("Emergency dump of the mSmPL will be " + output);
                                                                }
                                                                if (metaSmPL != null) {
                                                                    try {
                                                                        ReportUtil.fileOut(output, metaSmPL.toString());
                                                                    } catch (IOException e1) {
                                                                        e1.printStackTrace();
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    });
                                                } catch (IOException e) {
                                                    e.printStackTrace();
                                                }
                                            }
                                        });
                                        if (metaSmPL != null) ReportUtil.fileOut(output, metaSmPL.toString());
                                    } catch (IOException e) {
                                        e.printStackTrace();
                                    }
                                } else {
                                    logger.error("Failed to find destinationAPI");
                                }
                            }, () -> logger.error("Failed to find migration API sample"));
                        }
                    });
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
        });
        return 0;
    }


    private void trial(Path targetFilePath, CtExecutable migrationExample, CtExecutableReference<?> destinationAPI){
        final AtomicReference<CtType> modifiedTopLevelType = new AtomicReference<>();
        logger.info("Start migrate deprecated API usage:" + targetFilePath.toString());
        logger.info("Loading the deprecated API usage...");
        Launcher targetLauncher = new Launcher();
        //Make build model of Java code that use a deprecated API
        String[] args = {
                "-i", targetFilePath.toString(),
                "-c"
        };
        targetLauncher.setArgs(args);
        targetLauncher.getEnvironment().setSourceClasspath(jar);

        targetLauncher.run();
        logger.info("Finish loading");

        //Get Actual Invocation of the deprecated API in the Java code
        String deprecatedAPIName = deprecatedAPIFQN.substring(deprecatedAPIFQN.lastIndexOf("#")+1, deprecatedAPIFQN.indexOf("("));
        CtAbstractInvocation deprecateAPIInvocation = targetLauncher.getModel().getElements(new AbstractFilter<CtAbstractInvocation>() {
            @Override
            public boolean matches(CtAbstractInvocation element) {
                return (deprecatedAPIName.equals(element.getExecutable().getSimpleName()) || (element.getExecutable().getSimpleName().equals("<init>") && deprecatedAPIName.contains(element.getExecutable().getType().getSimpleName())))
                        && (deprecatedAPIFQN.split(",").length == element.getArguments().size() || (element.getArguments().size() == 0 && deprecatedAPIFQN.contains("()")));
            }
        }).get(0);

        TargetAndCandidateParametersLink linkStorage = new TargetAndCandidateParametersLink(deprecateAPIInvocation, Arrays.asList(new CtElement[] {destinationAPI}.clone()));

        //Setting up Normalizer and M-SmPL generator
        Pair<CtExecutableReference<?>, Pair<CodeNormalizer, MetaSmPLGenerator>> p = Pair.of(destinationAPI,
                Pair.of(CodeNormalizer.create(destinationAPI, false),
                        MetaSmPLGenerator.create(
                                deprecateAPIInvocation.getExecutable(),
                                destinationAPI,
                                this.pnLinker && linkStorage.argsLink.containsKey(Pair.of(deprecateAPIInvocation.getExecutable(), destinationAPI))
                                        ? linkStorage.argsLink.get(Pair.of(deprecateAPIInvocation.getExecutable(), destinationAPI))
                                        : Optional.empty()
                        )
                )
        );

        //create M-SmPL if it already exists use it
        if (metaSmPL== null) {
            //Normalize migration Example
            p.getSecond().getFirst().normalize(migrationExample.getReference());
            metaSmPL = p.getSecond().getSecond().generate(migrationExample);
        }

        //Prepare for Rewrite
        CodeNormalizer normalizer = CodeNormalizer.create(deprecateAPIInvocation.getExecutable(), true);
        normalizer.normalize(deprecateAPIInvocation.getParent(CtExecutable.class).getReference());

        //PUBLISH SmPL and rewrite
        deprecateAPIInvocation.getParent(CtClass.class).clone().getElements(new TypeFilter<>(deprecateAPIInvocation.getClass())).stream().filter(inv -> inv.equals(deprecateAPIInvocation)).findFirst().ifPresent(inv -> metaSmPL.publishSmPL(inv)
                .ifPresentOrElse(smplStr -> {
                    logger.info("Applying SMPL for" + targetFilePath.toString());
                    try {
                        ReportUtil.fileOut(targetFilePath.toString().substring(0, targetFilePath.toString().length() - 5) + "_Patch.cocci", smplStr);
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                    SmPLRule smpl = SmPLParser.parse(smplStr);
                    SmPLMethodCFG cfg = CFGFix.createSmPLMethodCFG(deprecateAPIInvocation.getParent(CtExecutable.class));
                    CFGModel cfgModel = new CFGModel(cfg);
                    CFGFix.fixModel(cfgModel);
                    ModelChecker checker = new ModelChecker(cfgModel);
                    smpl.getFormula().accept(checker);
                    ModelChecker.ResultSet result = checker.getResult();
                    if (!result.getAllWitnesses().isEmpty()) {
                        Transformer.transform(cfgModel, result.getAllWitnesses());
                        CodeDenormalizer.denormalize(deprecateAPIInvocation.getParent(CtExecutable.class));
                        CtType<?> parentType = deprecateAPIInvocation.getParent(CtType.class);
                        while (parentType.getParent(CtType.class) != null) {
                            parentType = parentType.getParent(CtType.class);
                        }
                        modifiedTopLevelType.set(parentType);
                    } else {
                        logger.error("No witness of CTL-VW model checking");
                    }
                }, () -> logger.error("Failed to PUBLISH")));

        //Print rewritten file
        if (modifiedTopLevelType.get() != null) {
            String output = targetFilePath.toString().substring(0, targetFilePath.toString().length() - 5) + "Migrated.java";
            JavaOutputProcessor outputProcessor = targetLauncher.createOutputWriter();
            outputProcessor.getEnvironment().setSourceOutputDirectory(new File(output));
            outputProcessor.createJavaFile(modifiedTopLevelType.get());
        }
    }

}